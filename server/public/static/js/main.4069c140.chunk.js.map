{"version":3,"sources":["services/auth.js","components/navbar/NavBar.js","components/footer/Footer.js","components/auth/Signup.js","components/auth/Login.js","components/searchBar/SearchBar.js","components/home/Home.js","services/activities.js","components/categoryCard/CategoryCard.js","components/categories/Categories.js","components/activityOverview/ActivityOverview.js","components/activitiesByCategory/ActivitiesByCategory.js","components/allActivities/AllActivities.js","services/users.js","components/map/Map.js","components/activityDetails/ActivityDetails.js","services/organizations.js","services/files.js","components/newOrganization/NewOrganization.js","components/organizationDetails/OrganizationDetails.js","components/googleSearchBox/googleSearchBox.js","components/newActivity/NewActivity.js","components/searchResult/SearchResult.js","components/userProfile/UserProfile.js","components/editOrganizationForm/EditOrganizationForm.js","components/activityControlView/ActivityControlView.js","components/editActivityForm/EditActivityForm.js","components/controlPanel/ControlPanel.js","App.js","serviceWorker.js","index.js"],"names":["Services","signup","username","password","email","role","service","post","then","response","data","login","logout","loggedin","get","this","axios","create","baseURL","process","withCredentials","NavBar","props","handleLogout","e","authServices","AuthServices","userInSession","Navbar","sticky","bg","expand","Brand","className","to","src","alt","Toggle","aria-controls","Collapse","id","Nav","Link","as","DropdownButton","alignRight","title","_id","onClick","imgPath","React","Component","Footer","Container","fluid","Row","Col","xs","Signup","handleChange","target","name","value","setState","handleSubmit","preventDefault","postUser","state","theLoggedNewUser","setUser","catch","err","error","span","offset","Form","onSubmit","Group","Label","Control","onChange","required","type","Button","Login","theLoggedUser","history","push","console","log","SearchBar","searchTerm","redirect","InputGroup","FormControl","size","placeholder","Append","Home","Carousel","Item","getAllActivities","getActivityDetails","getActivitiesByTerm","getActivitiesByCategory","category","getActivitiesByParticipant","participant","getActivitiesByOrganization","organization","createActivity","newActivity","updateActivity","fieldToUpdate","put","addParticipant","idActivity","idUser","deleteParticipant","deleteActivity","delete","CategoryCard","Card","Img","variant","Body","Title","charAt","toUpperCase","slice","Text","description","Categories","allActivities","length","activitiesServices","allCategories","Set","map","activity","JSON","stringify","x","parse","componentDidMount","loggedInUser","ActivitiesServices","idx","key","Spinner","animation","ActivityOverview","lg","Badge","pill","dates","date","moment","format","maxParticipants","participants","clickToDelete","Activities","activities","match","params","handleDateFilter","selectedDate","categoryName","filter","includes","AllActivities","handleCategoryFilter","newFilter","filteredCategories","categoryIndex","indexOf","splice","filteredActivities","Check","label","activityFilteredByDate","getAllUsers","getUserDetails","updateUser","updateUserFav","userId","activityId","Geocode","setApiKey","enableDebug","Map","onInfoWindowClose","event","mapPosition","lat","center","lng","markerPosition","AsyncMap","withScriptjs","withGoogleMap","google","defaultZoom","zoom","defaultCenter","draggable","position","undefined","googleMapURL","loadingElement","style","height","containerElement","mapElement","ActivityDetails","getSpecificActivity","specificActivity","userIsParticipant","activityIsFav","find","favActivities","addActivityToFav","usersServices","newParticipant","updatedActivity","UsersServices","requirements","time","minParticipants","disabled","width","border","overflow","scrolling","allow","href","data-size","data-lang","data-show-count","async","charSet","location","coord","getAllOrganizations","getOrganizationDetails","getOrganizationByUser","updateOrganization","updatedObject","createOrganization","newOrganization","FilesServices","handleUpload","theFile","NewOrganization","handleFileUpload","uploadData","FormData","append","files","filesServices","secure_url","closeModal","showModal","openModal","address","webpage","phone","user","organizationsServices","OrganizationsServices","rows","Modal","show","onHide","Header","closeButton","OrganizationDetails","getOrganization","rel","SearchBox","handleSelect","geocodeByAddress","results","getLatLng","latLng","selectLocation","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","suggestion","active","backgroundColor","cursor","NewActivity","fetchOrganization","updateStateWithLocation","dataFromChild","userOrganization","defaultValue","min","max","SearchResult","getSearchResults","foundActivities","UserProfile","getUserInfo","checkOwner","getActivitiesWhereUserIsParticipant","isOwner","deleteParticipation","owner","EditOrganizationForm","saveChanges","finishAction","refreshData","ActivityControlView","onEditClick","activityIdx","onDeleteClick","EditActivityForm","ControlPanel","getActivityToEdit","activityToEdit","openActivityModal","openOrganizationModal","showOrganizationModal","closeOrganizationModal","showActivityModal","closeActivityModal","Tab","defaultActiveKey","sm","eventKey","Content","Pane","Math","random","App","fetchUser","userObj","exact","path","component","render","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4069c140.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default class Services {\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/auth`,\n            withCredentials: true\n        })\n    }\n\n    signup = ({ username, password, email, role }) => this.service.post('/signup', { username, password, email, role }).then(response => response.data);\n\n    login = ({ username, password }) => {\n        return this.service.post('/login', { username, password }).then(response => response.data);\n    }\n\n    logout = () => this.service.post('/logout').then(response => response.data);\n    \n    loggedin = () => this.service.get('/loggedin').then(response => response.data);\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthServices from \"../../services/auth\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Nav from \"react-bootstrap/Nav\";\nimport \"./NavBar.scss\";\n\nexport default class NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.authServices = new AuthServices();\n  }\n\n  handleLogout = e => {\n    this.props.logout();\n  };\n\n  render() {\n    if (this.props.userInSession) {\n      return (\n        <Navbar sticky=\"top\" bg=\"light\" expand=\"lg\">\n          <Navbar.Brand className=\"navbar-brand\"><Link to=\"/home\"><img className=\"navbar-logo\" src=\"https://res.cloudinary.com/yelpcampagb/image/upload/v1583620107/ironhack-project3/inemcz4pjwjcfqppheev.png\" alt=\"SUMA logo\"/></Link></Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link as={Link} to=\"/home\">Home</Nav.Link>\n              <Nav.Link as={Link} to=\"/categories\">Categorías</Nav.Link>\n              <Nav.Link as={Link} to=\"/activities\">Actividades</Nav.Link>\n            </Nav>\n            {this.props.userInSession.role === 'organization' ? (\n              <>\n                <Link to=\"/organizations/new\" className=\"navLink-create\">Crear organización</Link>\n                <Link to=\"/activities/new\" className=\"navLink-create\">Crear actividad</Link>\n              </>\n            ) : (\n              <></>\n            )}\n            <DropdownButton className=\"navbar-dropdown\"\n              alignRight\n              title={this.props.userInSession.username}\n            >\n              {this.props.userInSession.role === 'organization' ? (\n                <Link to=\"/controlpanel\" className=\"navbar-userLink\">Panel de control</Link>\n              ) : (\n                <></>\n              )}\n              <Link to={`/users/${this.props.userInSession._id}`} className=\"navbar-userLink\">Mi perfil</Link>\n              <Link to=\"/home\" onClick={this.handleLogout} className=\"navbar-userLink\">Logout</Link>\n            </DropdownButton>\n\n            <span className=\"navbar-avatar\"><img src={this.props.userInSession.imgPath} alt=\"\"/></span>\n          </Navbar.Collapse>\n        </Navbar>\n      );\n    } else {\n      return (\n        <Navbar sticky=\"top\" bg=\"light\" expand=\"lg\">\n          <Navbar.Brand className=\"navbar-brand\"><Link to=\"/home\"><img className=\"navbar-logo\" src=\"https://res.cloudinary.com/yelpcampagb/image/upload/v1583620107/ironhack-project3/inemcz4pjwjcfqppheev.png\" alt=\"SUMA logo\"/></Link></Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link as={Link} to=\"/home\">Home</Nav.Link>\n              <Nav.Link as={Link} to=\"/categories\">Categorías</Nav.Link>\n              <Nav.Link as={Link} to=\"/activities\">Actividades</Nav.Link>\n            </Nav>\n              <Link to=\"/signup\" className=\"navLink\">Regístrate</Link>\n              <Link to=\"/login\" className=\"navLink navLink-right\">Inicia sesión</Link>\n          </Navbar.Collapse>\n        </Navbar>\n      );\n    }\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport './Footer.scss';\n\n\nconst Footer = () => {\n    return (\n        <Container fluid>\n        <Row className=\"footer\">\n            <Col><img src=\"https://res.cloudinary.com/yelpcampagb/image/upload/v1583620107/ironhack-project3/inemcz4pjwjcfqppheev.png\" alt=\"\"/></Col>\n            <Col xs={6}>\n                <Link to=\"#\">Quiénes somos</Link>\n                <Link to=\"#\">Preguntas frecuentes</Link>\n                <Link to=\"#\">Contacto</Link>\n            </Col>\n            <Col>\n                Social\n            </Col>\n        </Row>\n        </Container>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Container, Row, Col } from 'react-bootstrap';\nimport AuthServices from '../../services/auth';\nimport './Auth.scss';\n\nexport default class Signup extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            username: '',\n            password: '',\n            email: '',\n            role: ''\n        }\n        this.authServices = new AuthServices()\n    }\n\n    handleChange = e => {\n        let { name, value } = e.target;\n        this.setState({ [name]: value })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.postUser()\n    }\n\n    postUser = () => {\n        this.authServices.signup(this.state)\n        .then(theLoggedNewUser => {\n            this.setState({ username: '', password: '' })\n            this.props.setUser(theLoggedNewUser)\n        })\n        .catch(err => {\n            this.setState({\n                username: this.state.username,\n                password: this.state.password,\n                error: true\n            });\n        });\n    }\n\n    render() {\n        return (\n            <Container fluid>\n                <Row>\n                    <Col xs={{span: 3, offset: 2}} className=\"signupForm\">\n                        <h1>¡Únete y suma!</h1>\n                        <Form onSubmit={this.handleSubmit}>\n                            <Form.Group> \n                                <Form.Label>Soy:</Form.Label>\n                                    <Form.Control as=\"select\" name=\"role\" onChange={this.handleChange} required >\n                                        <option value=\"volunteer\">Voluntario</option>\n                                        <option value=\"organization\">Organización</option>\n                                    </Form.Control>\n                            </Form.Group>\n                            <Form.Group> \n                                <Form.Label>Email:</Form.Label>\n                                <Form.Control type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} required />\n                            </Form.Group>\n                            <Form.Group> \n                                <Form.Label>Usuario:</Form.Label>\n                                <Form.Control type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} required />\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Contraseña:</Form.Label>\n                                <Form.Control type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} required />\n                            </Form.Group>\n                            <Form.Group className=\"signupBtn\">\n                                <Button type=\"submit\">Registrarse</Button>\n                            </Form.Group>\n                        </Form>\n                        <div className=\"loginLnk\">\n                            <span>¿Ya tienes una cuenta? <Link to=\"/login\">Inicia sesión</Link></span>\n                            <h1>{this.state.error ? 'Error' : ''}</h1>\n                        </div>\n                    </Col>\n\n                    <Col xs={{span: 5, offset: 2}}>\n                        <img className=\"loginImg\" src=\"https://images.unsplash.com/photo-1578357078586-491adf1aa5ba?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1000&q=80\" alt=\"\"/>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}","import React from 'react';\nimport AuthServices from '../../services/auth';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Container, Row, Col } from 'react-bootstrap';\nimport './Auth.scss';\n\nexport default class Login extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: 'arturo',\n            password: 'arturo'\n        }\n        this.authServices = new AuthServices()\n    }\n\n    handleChange = e => {\n        let { name, value } = e.target\n        this.setState({ [name]: value })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.postUser()\n    }\n\n    postUser = () => {\n        this.authServices.login(this.state)\n        .then(theLoggedUser => {\n                this.setState({ username: '', password: '' })\n                this.props.setUser(theLoggedUser)\n                this.props.history.push('/home')\n            })\n            .catch(err => console.log({ err }))\n    }\n\n    render() {\n        return (\n            <Container fluid>\n                <Row>\n                    <Col xs={{span: 3, offset: 2}} className=\"loginForm\">\n                        <h1>¡Nos encanta que vuelvas!</h1>\n                        <Form onSubmit={this.handleSubmit}>\n                            <Form.Group> \n                                <Form.Label>Usuario:</Form.Label>\n                                <Form.Control type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} required />\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Label>Contraseña:</Form.Label>\n                                <Form.Control type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} required />\n                            </Form.Group>\n                            <Form.Group className=\"loginBtn\">\n                                <Button type=\"submit\">Iniciar sesión</Button>\n                            </Form.Group>\n                        </Form>\n                        <div className=\"signupLnk\">\n                            <span className=\"lnk\">¿Aún no tienes una cuenta? <Link to=\"/signup\">Regístrate</Link></span>\n                            <h1>{this.state.error ? 'Error' : ''}</h1>\n                        </div>\n                    </Col>\n\n                    <Col xs={{span: 5, offset: 2}}>\n                        <img className=\"loginImg\" src=\"https://images.unsplash.com/photo-1578357078586-491adf1aa5ba?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1000&q=80\" alt=\"\"/>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl';\nimport './SearchBar.scss';\n\nexport default class SearchBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            searchTerm: \"\",\n            redirect: null\n        }\n    }\n\n    handleChange = e => {\n        this.setState({ searchTerm: e.target.value })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.setState({ redirect: `/activities/search/${this.state.searchTerm}`})\n    }\n\n    render() {\n        if(this.state.redirect) {\n            return <Redirect to={this.state.redirect} />\n        }\n        return(\n            <InputGroup className=\"mb-3 searchBar\">\n                <FormControl type=\"text\" size=\"lg\" name=\"query\" value={this.state.searchTerm} onChange={this.handleChange} placeholder=\"Busca tu actividad de voluntariado\" />\n                <InputGroup.Append>\n                    <Button type=\"submit\" onClick={(e) => this.handleSubmit(e)}>Buscar</Button>\n                </InputGroup.Append>\n            </InputGroup>\n        )\n    }\n}","import React from 'react';\nimport Carousel from \"react-bootstrap/Carousel\";\nimport SearchBar from '../searchBar/SearchBar';\nimport './Home.scss';\n\nexport default class Home extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return(\n            <div className=\"home\">\n                <section className=\"hero\">\n                    <div className=\"home-searchBar\">\n                        <SearchBar />\n                    </div>\n            \n                    <Carousel className=\"home-carousel\">\n                        <Carousel.Item>\n                            <img    \n                                className=\"d-block w-100\"\n                                src=\"https://res.cloudinary.com/yelpcampagb/image/upload/v1584060008/ironhack-project3/ipdfcseopgfca6kcp6wn.jpg\"\n                                alt=\"First slide\"\n                            />\n                        </Carousel.Item>\n                        <Carousel.Item>\n                            <img\n                                className=\"d-block w-100\"\n                                src=\"https://res.cloudinary.com/yelpcampagb/image/upload/v1584059411/ironhack-project3/yeoece4davshjf1qga6h.jpg\"\n                                alt=\"Second slide\"\n                            />\n                        </Carousel.Item>\n                        <Carousel.Item>\n                            <img\n                                className=\"d-block w-100\"\n                                src=\"https://res.cloudinary.com/yelpcampagb/image/upload/v1584060008/ironhack-project3/t7bl2g1efiz9d8gwtr49.jpg\"\n                                alt=\"Third slide\"\n                            />\n                        </Carousel.Item>\n                        <Carousel.Item>\n                            <img\n                                className=\"d-block w-100\"\n                                src=\"https://res.cloudinary.com/yelpcampagb/image/upload/v1584059411/ironhack-project3/a8ic0tuxntk2furby3hz.jpg\"\n                                alt=\"Fourth slide\"\n                            />\n                        </Carousel.Item>\n                    </Carousel>\n                \n                </section>\n            </div>\n        )\n    }\n}","import axios from 'axios';\n\nexport default class Services {\n\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/activities`,\n            withCredentials: true\n        })\n    }\n\n    getAllActivities = () => this.service.get('/all').then(response => response.data);\n    \n    getActivityDetails = id => this.service.get(`/${id}`).then(response => response.data);\n\n    getActivitiesByTerm = searchTerm => this.service.get(`/search/${searchTerm}`).then(response => response.data);\n\n    getActivitiesByCategory = category => this.service.get(`/categories/${category}`).then(response => response.data);\n\n    getActivitiesByParticipant = participant => this.service.get(`/participants/${participant}`).then(response => response.data);\n\n    getActivitiesByOrganization = organization => this.service.get(`/organization/${organization}`).then(response => response.data);\n\n    createActivity = newActivity => this.service.post('/new', newActivity).then(response => response.data);\n\n    updateActivity = (id, fieldToUpdate) => this.service.put(`/${id}`, fieldToUpdate).then(response => response.data);\n\n    addParticipant = (idActivity, idUser) => this.service.put(`/${idActivity}/participants/add`, idUser).then(response => response.data);\n\n    deleteParticipant = (idActivity, idUser) => this.service.put(`/${idActivity}/participants/delete`, idUser).then(response => response.data);\n\n    deleteActivity = id => this.service.delete(`/${id}`).then(response => response.data);\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport './CategoryCard.scss';\n\nexport default class CategoryCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    render() {\n        let category = this.props.category;\n        return (\n            <>\n                <Card className=\"categoryCard\">\n                    <Card.Img variant=\"top\" src={category.imgPath} />\n                    <Card.Body>\n                        <Card.Title>{category.name.charAt(0).toUpperCase() + category.name.slice(1)}</Card.Title>\n                        <Card.Text>{category.description}</Card.Text>\n                        <Link to={`/categories/${category.name}`}><Button variant=\"primary\">Ver actividades</Button></Link>\n                    </Card.Body>\n                </Card>\n            </>\n        );\n    }\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Spinner from 'react-bootstrap/Spinner'\nimport Container from 'react-bootstrap/Container';\nimport ActivitiesServices from \"../../services/activities\";\nimport CategoryCard from \"../categoryCard/CategoryCard\";\nimport \"./Categories.scss\";\n\nexport default class Categories extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loggedInUser: null,\n      allActivities: [],\n      allCategories: []\n    };\n\n    this.activitiesServices = new ActivitiesServices();\n  }\n\n  getAllActivities = () => {\n    if (this.state.allActivities.length === 0) {\n      this.activitiesServices.getAllActivities()\n        .then(allActivities => {\n          let allCategories = [...new Set(allActivities.map(activity => JSON.stringify(activity.category)))].map(x => JSON.parse(x));\n          this.setState({ allActivities: allActivities, allCategories: allCategories })\n        })\n        .catch(err => console.log(err));\n    }\n  };\n\n  componentDidMount = () => {this.getAllActivities()}\n\n  render() {\n    return (\n      <Container>\n        <h1 className=\"categories-title\">Voluntariado por categorías</h1>\n        {this.state.allCategories.length ? (\n          <div className=\"categoryList\">\n            {this.state.allCategories.map((category, idx) => <CategoryCard key={idx} category={category} />)}\n          </div>\n        ) : (\n          <Spinner animation=\"border\" role=\"status\">\n            <span className=\"sr-only\">Cargando...</span>\n          </Spinner>\n        )}\n      </Container>\n    );\n  }\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./ActivityOverview.scss\";\n\n\nexport default class ActivityOverview extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let activity = this.props.activity;\n        return (\n            <Container fluid className=\"activityOverview\">\n                <Row>\n                    <Col lg={4} className=\"imageCol\">\n                        <img className=\"activityImage\" src={activity.imgPath} alt={activity.title} />\n                    </Col>\n                    <Col lg={8}>\n                        <Row>\n                            <h3>{activity.title}</h3>\n                        </Row>\n                        <Row>\n                            <Col lg={7}>\n                                <h6>Categoría: <Badge pill variant=\"info\">{activity.category.name}</Badge></h6>\n                                <h6>Fechas:</h6>\n                                {activity.dates.map((date, idx) => <li key={idx}>{moment(date).format('DD/MM/YYYY')}</li>)}\n                                <h6>Plazas vacantes: {activity.maxParticipants - activity.participants.length}</h6>\n                            </Col>\n                            <Col lg={5} className=\"organizationCol\">\n                                <h6>Organización: <Link to={`/organizations/details/${activity.organization._id}`}>{activity.organization.name}</Link></h6>\n                                <img src={activity.organization.imgPath} alt={`${activity.organization.name}`} />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col lg={8} className=\"activityOverview-buttons\">\n                                <Link to={`/activities/details/${activity._id}`}><Button>Más info</Button></Link>\n                                {this.props.clickToDelete ? (\n                                    <Button variant=\"danger\" onClick={() => this.props.clickToDelete(activity._id)}>Retirar participación</Button>\n                                ) : (\n                                    \"\"\n                                )}\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }  \n}","import React from \"react\";\nimport Spinner from 'react-bootstrap/Spinner';\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport moment from \"moment\";\nimport ActivitiesServices from \"../../services/activities\";\nimport ActivityOverview from '../activityOverview/ActivityOverview';\nimport './ActivitiesByCategory.scss';\n\n\nexport default class Activities extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            activities: [],\n            selectedDate: \"\"\n        }\n\n        this.activitiesServices = new ActivitiesServices();\n    }\n\n    getActivitiesByCategory = () => {\n        if (this.state.activities.length === 0) {\n            this.activitiesServices.getActivitiesByCategory(this.props.match.params.name)\n                .then(activities => this.setState({ activities: activities }))\n                .catch(err => console.log(err))\n        }\n    }\n\n    handleDateFilter = (e) => {\n        let selectedDate = e.target.value;\n        this.setState({ selectedDate: selectedDate });\n    } \n\n    componentDidMount = () => this.getActivitiesByCategory();\n\n    render() {\n        let categoryName = this.props.match.params.name;\n        return (    \n            <div className=\"activitiesByCategory\">\n                <h1 className=\"activitiesByCategory-title\">Actividades por categoría: {categoryName.charAt(0).toUpperCase() + categoryName.slice(1)}</h1>\n                {this.state.activities.length ? (\n                    <div className=\"activitiesList\">\n                        <Row>\n                            <Col lg={2}>\n                                <div className=\"filterCol\">\n                                    <h5>Filtro de actividades:</h5>\n                                    <Form.Group>\n                                        <Form.Label>Fecha:</Form.Label>\n                                        <Form.Control type=\"date\" onChange={this.handleDateFilter}/>\n                                    </Form.Group>\n                                </div>\n                            </Col>\n                            <Col>\n                                {this.state.selectedDate ? (\n                                    this.state.activities.filter(activity => activity.dates.map(date => moment(date).format('YYYY-MM-DD')).includes(this.state.selectedDate)).map((activity, idx) => <ActivityOverview key={idx} activity={activity} />)\n                                ) : (\n                                    this.state.activities.map((activity, idx) => <ActivityOverview key={idx} activity={activity} />)\n                                )}\n                            </Col>\n                        </Row>\n                    </div>\n                ) : (\n                    <Spinner animation=\"border\" role=\"status\">\n                        <span className=\"sr-only\">Cargando...</span>\n                    </Spinner>\n                )}\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport moment from \"moment\";\nimport ActivitiesServices from \"../../services/activities\";\nimport ActivityOverview from '../activityOverview/ActivityOverview';\nimport './AllActivities.scss';\n\n\nexport default class AllActivities extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            allActivities: [],\n            allCategories: [],\n            filteredActivities: [],\n            filteredCategories: [],\n            selectedDate: \"\"\n        }\n\n        this.activitiesServices = new ActivitiesServices();\n    }\n\n    componentDidMount = () => this.getAllActivities();\n\n    getAllActivities = () => {\n        if (this.state.allActivities.length === 0) {\n            this.activitiesServices.getAllActivities()\n                .then(allActivities => {\n                let allCategories = [...new Set(allActivities.map(activity => JSON.stringify(activity.category)))].map(x => JSON.parse(x));\n                this.setState({ allActivities: allActivities, allCategories: allCategories })\n                })\n                .catch(err => console.log(err));\n        }\n    }\n\n    handleCategoryFilter = (e) => {\n        let category = e.target.id;\n        let newFilter = [...this.state.filteredCategories];\n        let categoryIndex = this.state.filteredCategories.indexOf(category);\n        if(categoryIndex > -1) {\n            newFilter.splice(categoryIndex, 1);\n        } else {\n            newFilter.push(category);\n        }\n        this.setState({ filteredCategories: newFilter })\n    }\n\n    handleDateFilter = (e) => {\n        let selectedDate = e.target.value;\n        this.setState({ selectedDate: selectedDate });\n    } \n\n    render() {\n        return (    \n            <div className=\"allActivities\">\n                <h1 className=\"allActivities-title\">Todas nuestras actividades</h1>\n                {this.state.allActivities.length ? (\n                    <div className=\"activitiesList\">\n                        <Row>\n                            <Col lg={2}>\n                                <div className=\"filterCol\">\n                                    <h5>Filtro de actividades:</h5>\n                                    <Form.Group>\n                                        <Form.Label>Fecha:</Form.Label>\n                                        <Form.Control type=\"date\" onChange={this.handleDateFilter}/>\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Label>Categoría:</Form.Label>\n                                        {this.state.allCategories.map((category, idx) => (\n                                            <Form.Check key={idx} type=\"checkbox\" name=\"category\" id={category.name} label={category.name} onChange={this.handleCategoryFilter}/>\n                                        ))}\n                                    </Form.Group>\n                                </div>\n                            </Col>\n                            <Col>\n                                {this.state.selectedDate ? (\n                                    this.state.filteredCategories.length ? (\n                                        this.state.allActivities.filter(activity => activity.dates.map(date => moment(date).format('YYYY-MM-DD')).includes(this.state.selectedDate)).filter(activityFilteredByDate => this.state.filteredCategories.includes(activityFilteredByDate.category.name)).map((activity, idx) => <ActivityOverview key={idx} activity={activity} />)\n                                    ) : (\n                                        this.state.allActivities.filter(activity => activity.dates.map(date => moment(date).format('YYYY-MM-DD')).includes(this.state.selectedDate)).map((activity, idx) => <ActivityOverview key={idx} activity={activity} />)\n                                    )\n                                ) : (\n                                    this.state.filteredCategories.length ? (\n                                        this.state.allActivities.filter(activity => this.state.filteredCategories.includes(activity.category.name)).map((activity, idx) => <ActivityOverview key={idx} activity={activity} />) \n                                    ) : (\n                                        this.state.allActivities.map((activity, idx) => <ActivityOverview key={idx} activity={activity} />)\n                                    )   \n                                )}\n                            </Col>\n                        </Row>\n                    </div>\n                ) : (\n                    <Spinner animation=\"border\" role=\"status\">\n                        <span className=\"sr-only\">Cargando...</span>\n                    </Spinner>\n                )}\n            </div>\n        );\n    }\n}\n","import axios from 'axios';\n\nexport default class Services {\n\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/users`,\n            withCredentials: true\n        })\n    }\n\n    getAllUsers = () => this.service.get('/all').then(response => response.data);\n\n    getUserDetails = id => this.service.get(`/${id}`).then(response => response.data);\n\n    updateUser = (id, fieldToUpdate) => this.service.put(`/${id}`, fieldToUpdate).then(response => response.data);\n\n    updateUserFav = (userId, activityId) => this.service.put(`/${userId}/favActivities/add`, activityId).then(response => response.data);\n}","import React from \"react\";\nimport {\n  withGoogleMap,\n  GoogleMap,\n  withScriptjs,\n  Marker\n} from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nGeocode.setApiKey(\"AIzaSyAlNRGTWqFk5o74Z4HdZxIUsXF2DNL_-h8\");\nGeocode.enableDebug();\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mapPosition: {\n        lat: this.props.center.lat,\n        lng: this.props.center.lng\n      },\n      markerPosition: {\n        lat: this.props.center.lat,\n        lng: this.props.center.lng\n      }\n    };\n  }\n\n\n  /**\n   * This Event triggers when the marker window is closed\n   *\n   * @param event\n   */\n  onInfoWindowClose = event => {};\n\n  render() {\n    const AsyncMap = withScriptjs(\n      withGoogleMap(props => (\n        <GoogleMap\n          google={this.props.google}\n          defaultZoom={this.props.zoom}\n          defaultCenter={{\n            lat: this.state.mapPosition.lat,\n            lng: this.state.mapPosition.lng\n          }}\n        >\n          {/*Marker*/}\n          <Marker\n            google={this.props.google}\n            name={\"\"}\n            draggable={false}\n            position={{\n              lat: this.state.markerPosition.lat,\n              lng: this.state.markerPosition.lng\n            }}\n          />\n          <Marker />\n        </GoogleMap>\n      ))\n    );\n    let map;\n    if (this.props.center.lat !== undefined) {\n      map = (\n        <div>\n          <AsyncMap\n            googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAlNRGTWqFk5o74Z4HdZxIUsXF2DNL_-h8&libraries=places\"\n            loadingElement={<div style={{ height: `100%` }} />}\n            containerElement={<div style={{ height: this.props.height }} />}\n            mapElement={<div style={{ height: `100%` }} />}\n          />\n        </div>\n      );\n    } else {\n      map = <div style={{ height: this.props.height }} />;\n    }\n    return map;\n  }\n}\nexport default Map;\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport Spinner from 'react-bootstrap/Spinner';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Badge from 'react-bootstrap/Badge';\nimport ActivitiesServices from \"../../services/activities\";\nimport UsersServices from \"../../services/users\";\nimport Map from \"../map/Map\";\nimport './ActivityDetails.scss';\n\nexport default class ActivityDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            specificActivity: null\n        }\n        \n        this.activitiesServices = new ActivitiesServices();\n        this.usersServices = new UsersServices();\n    }\n\n    componentDidMount = () => this.getSpecificActivity();\n\n    getSpecificActivity = () => {\n        if (!this.state.specificActivity) {\n            this.activitiesServices.getActivityDetails(this.props.match.params.id)\n                .then(specificActivity => this.setState({ specificActivity: specificActivity }, () => {\n                    this.userIsParticipant();\n                    this.activityIsFav();\n                }))\n                .catch(err => console.log(err))\n        }\n    }\n\n    userIsParticipant = () => {\n        let alreadyParticipant = this.state.specificActivity.participants.find(participant => participant._id === this.props.loggedInUser._id);\n        let userIsParticipant = false;\n        alreadyParticipant !== undefined ? userIsParticipant = true : userIsParticipant = false;\n        this.setState({ userIsParticipant: userIsParticipant })\n    }\n\n    activityIsFav = () => {\n        let alreadyFav = this.props.loggedInUser.favActivities.find(activity => activity === this.state.specificActivity._id);\n        let activityIsFav = false;\n        alreadyFav !== undefined ? activityIsFav = true : activityIsFav = false;\n        this.setState({ activityIsFav: activityIsFav })\n    }\n\n    addActivityToFav = () => {\n        this.usersServices.updateUserFav(this.props.loggedInUser._id, { favActivities: this.state.specificActivity._id })\n        .then(() => this.setState({ activityIsFav: true }))\n        .catch(err => console.log(err))\n    }\n\n    addParticipant = () => {\n        this.activitiesServices.addParticipant(this.state.specificActivity._id, { newParticipant: this.props.loggedInUser._id })\n        .then(updatedActivity => this.setState({ specificActivity: updatedActivity, userIsParticipant: true }))\n        .catch(err => console.log(err))\n    }\n\n    render() {\n        let activity = this.state.specificActivity;\n        return (    \n            <div>\n                {this.props.loggedInUser ? (\n                    this.state.specificActivity ? (\n                        <Container className=\"activityDetails\">\n                            <Row className=\"activityDetails-mainInfo\">\n                                <Col xs={8} className=\"leftSide\">\n                                    <h1>{this.state.specificActivity.title}</h1>\n                                    <h5 className=\"activityDetails-category\">Categoría: <Badge pill variant=\"info\">{activity.category.name}</Badge></h5>\n                                    <div className=\"activityDetails-activityImg\">\n                                        <img src={activity.imgPath} alt={`${activity.title}`} className=\"activityDetails-img\"/>\n                                    </div>\n                                    <h5>Descripción de la actividad:</h5>\n                                    <p>{activity.description}</p>\n                                    <h5>Requerimientos:</h5>\n                                    <p>{activity.requirements}</p>\n                                </Col>\n                                <Col className=\"rightSide\">\n                                    <img src={activity.organization.imgPath} alt={`logo de ${activity.organization.name}`} className=\"activityDetails-logo\"/>\n                                    <div>\n                                        <Link to={`/organizations/details/${activity.organization._id}`}><h5 className=\"activityDetails-organization\"><strong>{activity.organization.name}</strong></h5></Link>\n                                        <h5>Fechas y horas de la actividad:</h5>\n                                        <ul>\n                                            {activity.dates.map((date, idx)=> <li key={idx}>{moment(date).format('DD/MM/YYYY')} - {activity.time}</li>)}\n                                        </ul>\n                                    </div>\n                                    <div>\n                                        <h5>Mín. participantes: {activity.minParticipants}</h5>\n                                        <h5>Máx. participantes: {activity.maxParticipants}</h5>\n                                        <h5>Plazas vacantes: {activity.maxParticipants - activity.participants.length}</h5>\n                                    </div>\n                                </Col>\n                            </Row>\n                            \n                            <Row className=\"activityDetails-buttons\">\n                                <Col xs={1}>\n                                {this.state.activityIsFav ? (\n                                    <button variant=\"light\" className={`activityDetails-addFavButton ${this.state.activityIsFav ? 'disabled' : ''}`} onClick={this.addActivityToFav} disabled>♥</button>\n                                ) : (\n                                    <button className=\"activityDetails-addFavButton\" onClick={this.addActivityToFav}>♡</button>\n                                )}\n                                </Col>\n                                <Col>\n                                {this.state.userIsParticipant ? (\n                                    <span className=\"activityDetails-alreadyParticipant\">Estás apuntado a esta actividad</span>\n                                ) : (\n                                    <Button onClick={this.addParticipant}>¡Me apunto!</Button>\n                                )}\n                                </Col>\n                                <Col xs={4} className=\"activityDetails-share\">\n                                    <h6>Compártelo:</h6>\n                                    <span><iframe title=\"facebook button\" src=\"https://www.facebook.com/plugins/share_button.php?href=http%3A%2F%2Flocalhost%3A3000%2Factivities%2F5e6401261068a419c58a5fc7&layout=button&size=large&width=103&height=28&appId\" width=\"103\" height=\"28\" style={{border:'none',overflow:'hidden'}} scrolling=\"no\" allow=\"encrypted-media\"></iframe></span>\n                                    \n                                    <span><a href=\"https://twitter.com/share?ref_src=twsrc%5Etfw\" className=\"twitter-share-button\" data-size=\"large\" data-lang=\"es\" data-show-count=\"false\"><img src=\"https://res.cloudinary.com/yelpcampagb/image/upload/v1583674364/ironhack-project3/ery9xhqd2w0efipacfkw.png\" alt=\"twiteer button\"/></a><script async src=\"https://platform.twitter.com/widgets.js\" charSet=\"utf-8\"></script></span>\n                                </Col>\n                            </Row>\n                            \n                            <Row className=\"activityDetails-participants\">\n                                <Col>\n                                    <h6>Participantes:</h6>\n                                    {activity.participants.map((participant, idx) => (\n                                        <Link to={`/users/${participant._id}`} className=\"activityDetails-participant\" key={idx}><img src={participant.imgPath} alt={`${participant.name}`}/>{participant.username}</Link>\n                                    ))}\n                                </Col>\n                            </Row>\n                            <Row className=\"activityDetails-map\">\n                                <Col>\n                                    <h5><strong>Lugar:</strong> {activity.location}</h5>\n                                    <Map\n                                        google={this.props.google}\n                                        center={{lat: activity.coord.lat, lng: activity.coord.lng}}\n                                        height='300px'\n                                        zoom={15}\n                                    />\n                                </Col>\n                            </Row>\n                        </Container>  \n                    ) : (\n                        <Spinner animation=\"border\" role=\"status\">\n                            <span className=\"sr-only\">Cargando...</span>\n                        </Spinner>\n                    )\n                ) : (\n                    <Redirect to=\"/login\"></Redirect>\n                )}\n            </div>\n        );\n    }\n}","import axios from 'axios';\n\nexport default class Services {\n\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/organizations`,\n            withCredentials: true\n        })\n    }\n\n    getAllOrganizations = () => this.service.get('/all').then(response => response.data);\n\n    getOrganizationDetails = id => this.service.get(`/${id}`).then(response => response.data);\n\n    getOrganizationByUser = idUser => this.service.get(`/createdByUser/${idUser}`).then(response => response.data);\n\n    updateOrganization = (id, updatedObject) => this.service.put(`/${id}`, updatedObject).then(response => response.data);\n    \n    createOrganization = newOrganization => this.service.post('/new', newOrganization).then(response => response.data);\n}","import axios from 'axios';\n\nexport default class FilesServices {\n\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/files`,\n            withCredentials: true\n        })\n    }\n\n    handleUpload = theFile => this.service.post('/upload', theFile).then(response => response.data);\n}","import React from 'react';\nimport {Container, Form, Col, Button} from 'react-bootstrap';\nimport Modal from 'react-bootstrap/Modal'\nimport OrganizationsServices from '../../services/organizations';\nimport FilesServices from \"../../services/files\";\nimport './NewOrganization.scss';\n\nexport default class NewOrganization extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newOrganization: {\n                name: \"\",\n                address: \"\",\n                email: \"\",\n                webpage: \"\",\n                phone: \"\",\n                description: \"\",\n                imgPath: \"\",\n                user: this.props.loggedInUser._id\n            },\n            showModal: false\n        }\n\n        this.organizationsServices = new OrganizationsServices();\n        this.filesServices = new FilesServices();\n    }\n\n    handleChange = e => {\n        let { name, value } = e.target;\n        this.setState({\n            newOrganization: { ...this.state.newOrganization, [name]: value }\n        })\n    }\n\n    handleFileUpload = e => {\n        const uploadData = new FormData()\n        uploadData.append(\"imgPath\", e.target.files[0])\n        this.filesServices.handleUpload(uploadData)\n            .then(response => {\n                console.log('Subida de archivo finalizada! La URL de Cloudinary es: ', response.secure_url);\n                this.setState({\n                    newOrganization: { ...this.state.newOrganization, imgPath: response.secure_url }\n               })\n            })\n            .catch(err => console.log(err))\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.createOrganization();\n    }\n\n    createOrganization() {\n        this.organizationsServices.createOrganization(this.state.newOrganization)\n            .then(() => this.setState({ newOrganization: { name: \"\", address: \"\", email: \"\", webpage: \"\", phone: \"\", description: \"\", imgPath: \"\" }, showModal: true }))\n            .catch(err => console.log(err))\n    }\n\n    closeModal = () => this.setState({ showModal: false })\n    openModal = () => this.setState({ showModal: true })\n\n    render() {\n        return(\n            <Container className=\"newOrganization\">\n                <h1>Da de alta tu organización:</h1>\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Row>\n                        <Form.Group as={Col}>\n                            <Form.Label>Nombre:</Form.Label>\n                            <Form.Control type=\"text\" name=\"name\" value={this.state.newOrganization.name} onChange={this.handleChange} placeholder=\"\" required />\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Group>\n                        <Form.Label>Dirección:</Form.Label>\n                        <Form.Control type=\"text\" name=\"address\" value={this.state.newOrganization.address} onChange={this.handleChange} placeholder=\"\" required />\n                    </Form.Group>\n\n                    <Form.Row>\n                        <Form.Group as={Col}>\n                            <Form.Label>Email:</Form.Label>\n                            <Form.Control type=\"email\" name=\"email\" value={this.state.newOrganization.email} onChange={this.handleChange} placeholder=\"\" required />\n                        </Form.Group>\n\n                        <Form.Group as={Col}>\n                            <Form.Label>Página web:</Form.Label>\n                            <Form.Control type=\"text\" name=\"webpage\" value={this.state.newOrganization.webpage} onChange={this.handleChange} placeholder=\"\" />\n                        </Form.Group>\n\n                        <Form.Group as={Col}>\n                            <Form.Label>Teléfono:</Form.Label>\n                            <Form.Control name=\"phone\" value={this.state.newOrganization.phone} onChange={this.handleChange} required />\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Form.Group as={Col}>\n                            <Form.Label>Descripción:</Form.Label>\n                            <Form.Control as=\"textarea\" rows=\"6\" name=\"description\" value={this.state.newOrganization.description} onChange={this.handleChange} required />\n                        </Form.Group>\n                    </Form.Row>\n                \n                    <Form.Row>\n                        <Form.Group as={Col}>\n                            <Form.Label>Imagen o logo de la organización:</Form.Label>\n                            <Form.Control type=\"file\" name=\"imgPath\" onChange={this.handleFileUpload} />\n                        </Form.Group>\n                        <div as={Col} className=\"formButton\">\n                            <Button variant=\"primary\" type=\"submit\">Crear organización</Button>\n                        </div>\n                    </Form.Row>\n                </Form>\n                <div className=\"imgPreview\">\n                    <img src={this.state.newOrganization.imgPath} alt=\"\"/>\n                </div>\n\n                <Modal show={this.state.showModal} onHide={this.closeModal}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Organización creada</Modal.Title>\n                </Modal.Header>\n                    <Modal.Body>Tu organización ya está dada de alta. Ahora puedes empezar a crear las actividades.</Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.closeModal}>Cerrar</Button>\n                    </Modal.Footer>\n                </Modal>\n\n            </Container>\n        );\n    }\n}","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport OrganizationsServices from \"../../services/organizations\";\nimport './OrganizationDetails.scss';\n\nexport default class OrganizationDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            organization: null\n        }\n\n        this.organizationsServices = new OrganizationsServices();\n    }\n\n    componentDidMount = () => {\n        if(this.props.organization) {\n            this.setState({ organization: this.props.organization});\n        } else {\n            this.getOrganization();\n        }\n    }\n\n    getOrganization = () => {\n        this.organizationsServices.getOrganizationDetails(this.props.match.params.id)\n            .then(organization => {\n                this.setState({ organization: organization })\n            })\n            .catch(err => console.log(err));\n    }\n\n    render() {\n        let organization = this.state.organization;\n        return(\n            <div>\n                {this.props.loggedInUser ? (\n                    this.state.organization ? (\n                        <Container className=\"organizationDetails\">\n                            <Row className=\"mainInfo\">\n                                <Col xs={8}>\n                                    <h1>{organization.name}</h1>\n                                    <p>{organization.description}</p>\n                                </Col>\n                                <Col>\n                                    <div className=\"organizationDetails-logo\">\n                                        <img src={organization.imgPath} alt={organization.name}/>\n                                    </div>\n                                </Col>\n                            </Row>\n                            <Row className=\"contactInfo\">\n                                <Col>\n                                    <h4>Información de contacto:</h4>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col xs={5}>\n                                    <h5>Dirección:</h5>\n                                    <p>{organization.address}</p>\n                                </Col>\n                                <Col xs={2}>\n                                    <h5>Teléfono:</h5>\n                                    <p>{organization.phone}</p>\n                                </Col>\n                                <Col>\n                                    <h5>Email:</h5>\n                                    <a href={`mailto:${organization.email}`}>{organization.email}</a>\n                                </Col>\n                                <Col>\n                                    <h5>Página web:</h5>\n                                    <a href={organization.webpage} target=\"_blank\" rel=\"noopener noreferrer\">{organization.webpage}</a>\n                                </Col>\n                            </Row>\n                        </Container>\n                    ) : (\n                        <Spinner animation=\"border\" role=\"status\">\n                            <span className=\"sr-only\">Cargando...</span>\n                        </Spinner>\n                    )\n                ) : (\n                    <Redirect to=\"/login\"></Redirect>\n                )}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport { Form } from 'react-bootstrap';\n\n\nexport default class SearchBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n        location: \"\",\n        coord: {\n            lat: \"\",\n            lng: \"\"\n        } \n    };\n  }\n \n  handleChange = location => {\n    this.setState({ location });\n  };\n \n  handleSelect = location => {\n    geocodeByAddress(location)\n      .then(results => getLatLng(results[0]))\n      .then(latLng => this.setState({ location: location, coord: { lat: latLng.lat, lng: latLng.lng } }, () => this.props.selectLocation(this.state) ))\n      .catch(err => console.error('Error', err));\n  };\n\n \n  render() {\n    return (\n        <PlacesAutocomplete\n            value={this.state.location}\n            onChange={this.handleChange}\n            onSelect={this.handleSelect}\n        >\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n            <div>\n            <Form.Control type=\"text\" name=\"location\"\n                {...getInputProps({\n                placeholder: 'Busca la dirección',\n                className: 'location-search-input',\n                })}\n            />\n            <div className=\"autocomplete-dropdown-container\">\n                {loading && <div>Cargando...</div>}\n                {suggestions.map(suggestion => {\n                const className = suggestion.active\n                    ? 'suggestion-item--active'\n                    : 'suggestion-item';\n                const style = suggestion.active\n                    ? { backgroundColor: 'rgb(234, 242, 255)', cursor: 'pointer' }\n                    : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                return (\n                    <div\n                        {...getSuggestionItemProps(suggestion, {\n                            className,\n                            style,\n                        })}\n                        >\n                        <span>{suggestion.description}</span>\n                    </div>\n                );\n                })}\n            </div>\n            </div>\n        )}\n        </PlacesAutocomplete>\n    );\n  }\n}","import React from 'react';\nimport {Container, Form, Col, Button} from 'react-bootstrap';\nimport Modal from 'react-bootstrap/Modal';\nimport ActivitiesServices from '../../services/activities';\nimport OrganizationsServices from '../../services/organizations';\nimport FilesServices from \"../../services/files\";\nimport GoogleSearchBox from \"../../components/googleSearchBox/googleSearchBox\";\nimport './NewActivity.scss';\n\nexport default class NewActivity extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newActivity: {\n                title: \"\",\n                category: \"\",\n                description: \"\",\n                dates: \"\",\n                time: \"\",\n                location: \"\",\n                coord: {\n                    lat: null,\n                    lng: null\n                },\n                minParticipants: \"\",\n                maxParticipants: \"\",\n                requirements: \"\",\n                imgPath: \"\",\n                organization: \"\"\n            },\n            userOrganization: \"\",\n            showModal: false\n        }\n\n        this.activitiesServices = new ActivitiesServices();\n        this.organizationsServices = new OrganizationsServices();\n        this.filesServices = new FilesServices();\n    }\n\n    componentDidMount = () => this.fetchOrganization();\n\n    fetchOrganization() {\n        this.organizationsServices.getOrganizationByUser(this.props.loggedInUser._id)\n        .then(organization => this.setState({ newActivity: { organization: organization[0]._id }, userOrganization: organization[0] }))\n        .catch(err => console.log(err))\n    }\n\n    handleChange = e => {\n        let { name, value } = e.target;\n        this.setState({\n            newActivity: { ...this.state.newActivity, [name]: value }\n        })\n    }\n\n    handleFileUpload = e => {\n        const uploadData = new FormData()\n        uploadData.append(\"imgPath\", e.target.files[0])\n        this.filesServices.handleUpload(uploadData)\n            .then(response => {\n                console.log('Subida de archivo finalizada! La URL de Cloudinary es: ', response.secure_url);\n                this.setState({\n                    newActivity: { ...this.state.newActivity, imgPath: response.secure_url }\n               })\n            })\n            .catch(err => console.log(err))\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.createActivity();\n    }\n\n    updateStateWithLocation = dataFromChild => {\n        this.setState({\n            newActivity: {...this.state.newActivity, location: dataFromChild.location, coord: { lat: dataFromChild.coord.lat, lng: dataFromChild.coord.lng } } \n        })\n    }\n\n    createActivity() {\n        this.activitiesServices.createActivity(this.state.newActivity)\n            .then(() => this.setState({ newActivity: { title: \"\", category: \"\", description: \"\", date: \"\", time: \"\", location: \"\", minParticipants: \"\", maxParticipants: \"\", requirements: \"\", imgPath: \"\", organization: \"\" }, showModal: true }))\n            .catch(err => console.log(err))\n    }\n\n    closeModal = () => this.setState({ showModal: false })\n    openModal = () => this.setState({ showModal: true })\n\n    render() {\n        return(\n            <Container className=\"newActivity\">\n                <h1>Da de alta una actividad:</h1>\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Row>\n                        <Form.Group as={Col} xs={7}>\n                            <Form.Label>Título:</Form.Label>\n                            <Form.Control type=\"text\" name=\"title\" value={this.state.newActivity.title} onChange={this.handleChange} placeholder=\"\" required />\n                        </Form.Group>\n\n                        <Form.Group as={Col} xs={5}>\n                            <Form.Label>Organización:</Form.Label>\n                            <Form.Control name=\"organization\" value={this.state.userOrganization.name} disabled />\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Form.Group as={Col} xs={4}> \n                            <Form.Label>Categoría:</Form.Label>\n                            <Form.Control as=\"select\" name=\"category\" value={this.state.newActivity.category} onChange={this.handleChange} required>\n                                <option value=\"\" disabled defaultValue>Selecciona una categoría</option>\n                                <option value=\"ambiental\">Ambiental</option>\n                                <option value=\"comunitario\">Comunitario</option>\n                                <option value=\"cultural\">Cultural</option>\n                                <option value=\"deportivo\">Deportivo</option>\n                                <option value=\"educativo\">Educativo</option>\n                                <option value=\"ocio y tiempo libre\">Ocio y tiempo libre</option>\n                                <option value=\"proteccion civil\">Protección civil</option>\n                                <option value=\"social\">Social</option>\n                                <option value=\"socio-sanitario\">Socio-sanitario</option>\n                                <option value=\"otro\">Otro</option>\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group as={Col} xs={4}>\n                            <Form.Label>Fecha:</Form.Label>\n                            <Form.Control type=\"date\" name=\"dates\" value={this.state.newActivity.dates} onChange={this.handleChange} placeholder=\"\" required />\n                        </Form.Group>\n\n                        <Form.Group as={Col} xs={4}>\n                            <Form.Label>Hora:</Form.Label>\n                            <Form.Control type=\"text\" name=\"time\" value={this.state.newActivity.time} onChange={this.handleChange} placeholder=\"10:00 h - 13:00 h\" />\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Form.Group as={Col} xs={6}>\n                            <Form.Label>Descripción:</Form.Label>\n                            <Form.Control as=\"textarea\" rows=\"5\" name=\"description\" value={this.state.newActivity.description} onChange={this.handleChange} placeholder=\"Indica aquí la descripción de la actividad, en qué consiste y todos aquellos datos que sean de interés\" required />\n                        </Form.Group>\n\n                        <Form.Group as={Col} xs={6}>\n                            <Form.Label>Requerimientos:</Form.Label>\n                            <Form.Control as=\"textarea\" rows=\"5\" name=\"requirements\" value={this.state.newActivity.requirements} onChange={this.handleChange} placeholder=\"Indica aquí los requerimientos necesarios para poder ejercer como voluntario en esta actividad\" required />\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Form.Group as={Col} xs={12}>\n                            <Form.Label>Ubicación:</Form.Label>\n                            <GoogleSearchBox selectLocation={(dataFromChild) => this.updateStateWithLocation(dataFromChild)}></GoogleSearchBox>\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Form.Group as={Col} xs={3}>\n                            <Form.Label>Número mínimo de participantes:</Form.Label>\n                            <Form.Control type=\"number\" min=\"1\" max=\"100\" name=\"minParticipants\" value={this.state.newActivity.minParticipants} onChange={this.handleChange} required />\n                        </Form.Group>\n\n                        <Form.Group as={Col} xs={3}>\n                            <Form.Label>Número máximo de participantes:</Form.Label>\n                            <Form.Control type=\"number\" min=\"1\" max=\"100\" name=\"maxParticipants\" value={this.state.newActivity.maxParticipants} onChange={this.handleChange} required />\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Form.Group as={Col}>\n                            <Form.Label>Imagen de la actividad:</Form.Label>\n                            <Form.Control type=\"file\" name=\"imgPath\" onChange={this.handleFileUpload} />\n                        </Form.Group>\n\n                        <div as={Col} className=\"formButton\">\n                            <Button variant=\"primary\" type=\"submit\">Crear actividad</Button>\n                        </div>\n                    </Form.Row>\n                </Form>\n                <div className=\"imgPreview\">\n                    <img src={this.state.newActivity.imgPath} alt=\"\"/>\n                </div>\n\n                <Modal show={this.state.showModal} onHide={this.closeModal}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Actividad creada</Modal.Title>\n                </Modal.Header>\n                    <Modal.Body>Tu actividad ya está creada y lista para recibir voluntarios!</Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.closeModal}>Cerrar</Button>\n                    </Modal.Footer>\n                </Modal>\n\n            </Container>\n        );\n    }\n}","import React from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport moment from \"moment\";\nimport ActivitiesServices from '../../services/activities';\nimport ActivityOverview from '../activityOverview/ActivityOverview';\nimport './SearchResult.scss';\n\n\nexport default class SearchResult extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            foundActivities: [],\n            allCategories: [],\n            filteredActivities: [],\n            filteredCategories: [],\n            selectedDate: \"\"\n        }\n\n        this.activitiesServices = new ActivitiesServices();\n    }\n\n    componentDidMount = () => this.getSearchResults();\n\n    getSearchResults = () => {\n        if (this.state.foundActivities.length === 0){\n            this.activitiesServices.getActivitiesByTerm(this.props.match.params.searchTerm)\n                .then(foundActivities => {\n                let allCategories = [...new Set(foundActivities.map(activity => JSON.stringify(activity.category)))].map(x => JSON.parse(x));\n                this.setState({ foundActivities: foundActivities, allCategories: allCategories })\n                })\n                .catch(err => console.log(err));\n        }\n    }\n\n    handleCategoryFilter = (e) => {\n        let category = e.target.id;\n        let newFilter = [...this.state.filteredCategories];\n        let categoryIndex = this.state.filteredCategories.indexOf(category);\n        if(categoryIndex > -1) {\n            newFilter.splice(categoryIndex, 1);\n        } else {\n            newFilter.push(category);\n        }\n        this.setState({ filteredCategories: newFilter })\n    }\n\n    handleDateFilter = (e) => {\n        let selectedDate = e.target.value;\n        this.setState({ selectedDate: selectedDate });\n    }\n\n    render() {\n        return (    \n            <div className=\"searchResult\">\n                <h1 className=\"searchResult-title\">Resultados de la búsqueda</h1>\n                {this.state.foundActivities.length ? (\n                    <div className=\"activitiesList\">\n                        <Row>\n                            <Col lg={2}>\n                                <div className=\"filterCol\">   \n                                    <h5>Filtro de actividades:</h5>\n                                    <Form.Group>\n                                        <Form.Label>Fecha:</Form.Label>\n                                        <Form.Control type=\"date\" onChange={this.handleDateFilter}/>\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Label>Categoría:</Form.Label>\n                                        {this.state.allCategories.map((category, idx) => (\n                                            <Form.Check key={idx} type=\"checkbox\" name=\"category\" id={category.name} label={category.name} onChange={this.handleCategoryFilter}/>\n                                        ))}\n                                    </Form.Group>\n                                </div>\n                            </Col>\n                            <Col>\n                                {this.state.selectedDate ? (\n                                    this.state.filteredCategories.length ? (\n                                        this.state.foundActivities.filter(activity => activity.dates.map(date => moment(date).format('YYYY-MM-DD')).includes(this.state.selectedDate)).filter(activityFilteredByDate => this.state.filteredCategories.includes(activityFilteredByDate.category.name)).map((activity, idx) => <ActivityOverview key={idx} activity={activity} />)\n                                    ) : (\n                                        this.state.foundActivities.filter(activity => activity.dates.map(date => moment(date).format('YYYY-MM-DD')).includes(this.state.selectedDate)).map((activity, idx) => <ActivityOverview key={idx} activity={activity} />)\n                                    )\n                                ) : (\n                                    this.state.filteredCategories.length ? (\n                                        this.state.foundActivities.filter(activity => this.state.filteredCategories.includes(activity.category.name)).map((activity, idx) => <ActivityOverview key={idx} activity={activity} />) \n                                    ) : (\n                                        this.state.foundActivities.map((activity, idx) => <ActivityOverview key={idx} activity={activity} />)\n                                    )   \n                                )}           \n                            </Col>\n                        </Row>\n                    </div>\n                ) : (\n                    <Spinner animation=\"border\" role=\"status\">\n                        <span className=\"sr-only\">Cargando...</span>\n                    </Spinner>\n                )}\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ActivityOverview from '../activityOverview/ActivityOverview';\nimport UsersServices from \"../../services/users\";\nimport ActivitiesServices from \"../../services/activities\";\nimport './UserProfile.scss';\n\n\n\nexport default class UserProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: null,\n            isOwner: false,\n            activities: []\n        }\n\n        this.usersServices = new UsersServices();\n        this.activitiesServices = new ActivitiesServices();\n    }\n\n    componentDidMount = () => this.getUserInfo();\n\n    getUserInfo = () => {\n        this.usersServices.getUserDetails(this.props.match.params.id)\n        .then(user => this.setState({ user: user }, () => {\n            this.checkOwner();\n            this.getActivitiesWhereUserIsParticipant();\n        }))\n        .catch(err => console.log(err))\n    }\n\n    checkOwner = () => {\n        if(this.props.loggedInUser._id === this.state.user._id) {\n            this.setState({ isOwner: true })\n        } else {\n            this.setState({ isOwner: false })\n        }\n    }\n\n    getActivitiesWhereUserIsParticipant = () => {\n        this.activitiesServices.getActivitiesByParticipant(this.state.user._id)\n        .then(activities => {\n            this.setState({ activities: activities })\n        })\n        .catch(err => console.log(err))\n    }\n\n    deleteParticipation = (activityId) => {\n        this.activitiesServices.deleteParticipant(activityId, { participant: this.props.loggedInUser._id })\n        .then(() => this.getActivitiesWhereUserIsParticipant())\n        .catch(err => console.log(err))\n    }\n\n    render() {\n        let activities = this.state.activities;\n        let owner = this.state.isOwner;\n        let user = this.state.user;\n        let role = \"\";\n        if(user) {\n            role = user.role === 'volunteer' ? 'voluntario' : 'organización';\n        }\n        return (\n            <div className=\"userProfile\">\n                {this.props.loggedInUser ? (\n                    this.state.user ? (\n                        <div>\n                            <Row>\n                                <Col lg={3} className=\"userInfo\">\n                                    <img src={user.imgPath} alt={user.username} />\n                                    <div>\n                                        <h5>Usuario: {user.username}</h5>\n                                        <h5>Rol: {role}</h5>\n                                        <h5>Email: <a href={`mailto:${user.email}`}>{user.email}</a></h5>\n                                    </div>\n                                    {owner ? (\n                                        <Button variant=\"warning\">Editar datos</Button>\n                                    ) : (\n                                        \"\"\n                                    )}\n                                </Col>\n                                {this.props.loggedInUser ? (\n                                    <Col>\n                                        <Row>\n                                            {this.state.activities.length ? (\n                                                <>\n                                                    <h4>{`Actividades a las que está apuntado ${user.username}:`}</h4>\n                                                    {activities.map((activity, idx) => <ActivityOverview key={idx} activity={activity} clickToDelete={(activityId) => this.deleteParticipation(activityId)} />)}\n                                                </>\n                                            ) : (\n                                                <h4>{`${user.username} no está apuntado a ninguna actividad en este momento.`}</h4>\n                                            )}\n                                        </Row>\n                                        <Row>\n                                            {this.state.user.favActivities.length > 0 ? (\n                                                <>\n                                                    <h4>{`Actividades favoritas de ${user.username}:`}</h4>\n                                                    {user.favActivities.map((activity, idx) => <ActivityOverview key={idx} activity={activity} />)}\n                                                </>\n                                            ) : (\n                                                <h4>{`${user.username} no tiene ninguna actividad favorita`}.</h4>\n                                            )}\n                                        </Row>\n                                    </Col>\n                                ) : (\n                                    \"\"\n                                )}\n                            </Row>\n                        </div>\n                    ) : (\n                        <Spinner animation=\"border\" role=\"status\">\n                            <span className=\"sr-only\">Cargando...</span>\n                        </Spinner>\n                    )\n                ) : (\n                    <Redirect to=\"/login\"></Redirect>\n                )}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport OrganizationsServices from '../../services/organizations';\nimport FilesServices from '../../services/files';\n\nexport default class EditOrganizationForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            organization: {\n                name: this.props.organization.name,\n                description: this.props.organization.description,\n                address: this.props.organization.address,\n                phone: this.props.organization.phone,\n                email: this.props.organization.email,\n                webpage: this.props.organization.webpage,\n                imgPath: this.props.organization.imgPath\n            }\n        }\n\n        this.organizationsServices = new OrganizationsServices();\n        this.filesServices = new FilesServices();\n    }\n\n    \n    handleChange = e => {\n        let { name, value } = e.target;\n        this.setState({\n            organization: { ...this.state.organization, [name]: value }\n        })\n    }\n\n    handleFileUpload = e => {\n        const uploadData = new FormData()\n        uploadData.append(\"imgPath\", e.target.files[0])\n        this.filesServices.handleUpload(uploadData)\n            .then(response => {\n                console.log('Subida de archivo finalizada! La URL de Cloudinary es: ', response.secure_url)\n                this.setState({\n                    organization: { ...this.state.organization, imgPath: response.secure_url }\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.saveChanges();\n    }\n\n    saveChanges = () => {\n        this.organizationsServices.updateOrganization(this.props.organization._id, this.state.organization)\n            .then(() => this.finishAction())\n            .catch(err => console.log(err))\n    }\n\n    finishAction = () => {\n        this.props.closeModal();\n        this.props.refreshData();\n    }\n\n    render() {\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                <Form.Row>\n                    <Form.Group as={Col}>\n                        <Form.Label>Nombre:</Form.Label>\n                        <Form.Control type=\"text\" name=\"name\" value={this.state.organization.name} onChange={this.handleChange} placeholder=\"\" required />\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Group>\n                    <Form.Label>Dirección:</Form.Label>\n                    <Form.Control type=\"text\" name=\"address\" value={this.state.organization.address} onChange={this.handleChange} placeholder=\"\" required />\n                </Form.Group>\n\n                <Form.Row>\n                    <Form.Group as={Col}>\n                        <Form.Label>Email:</Form.Label>\n                        <Form.Control type=\"email\" name=\"email\" value={this.state.organization.email} onChange={this.handleChange} placeholder=\"\" required />\n                    </Form.Group>\n\n                    <Form.Group as={Col}>\n                        <Form.Label>Página web:</Form.Label>\n                        <Form.Control type=\"text\" name=\"webpage\" value={this.state.organization.webpage} onChange={this.handleChange} placeholder=\"\" />\n                    </Form.Group>\n\n                    <Form.Group as={Col}>\n                        <Form.Label>Teléfono:</Form.Label>\n                        <Form.Control name=\"phone\" value={this.state.organization.phone} onChange={this.handleChange} required />\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Row> \n                    <Form.Group as={Col}>\n                        <Form.Label>Descripción:</Form.Label>\n                        <Form.Control as=\"textarea\" rows=\"6\" name=\"description\" value={this.state.organization.description} onChange={this.handleChange} required />\n                    </Form.Group>\n                </Form.Row>\n            \n                <Form.Row>\n                    <Form.Group as={Col}>\n                        <Form.Label>Imagen o logo de la organización:</Form.Label>\n                        <Form.Control type=\"file\" name=\"imgPath\" onChange={this.handleFileUpload} />\n                    </Form.Group>\n                </Form.Row>\n                <Button variant=\"primary\" type=\"submit\">Guardar cambios</Button>\n            </Form>\n        )\n    }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Button from \"react-bootstrap/Button\";\nimport ActivitiesServices from \"../../services/activities\";\nimport './ActivityControlView.scss';\n\n\nexport default class ActivityControlView extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.activitiesServices = new ActivitiesServices();\n    }\n\n    render() {\n        let activity = this.props.activity;\n        return (\n            <Container fluid className=\"activityControlView\">\n                <Row className=\"activityControlView-mainInfo\">\n                    <Col lg={8}>\n                        <h6>Título: {activity.title}</h6>\n                        <h6>Categoría: <Badge pill variant=\"info\">{activity.category.name}</Badge></h6>\n                        <h6>Lugar: {activity.location}</h6>\n                    </Col>\n                    <Col lg={4}>\n                        <h6>Fechas:</h6>\n                        {activity.dates.map((date, idx) => <li key={idx}>{moment(date).format('DD/MM/YYYY')}</li>)}\n                    </Col>\n                </Row>\n\n                <Row className=\"activityControlView-participants\">\n                    <Col lg={8}>\n                        <h5>Voluntarios:</h5>\n                        {activity.participants.map((participant, idx) => <Link to={`/users/${participant._id}`} className=\"participant\" key={idx}><img src={participant.imgPath} alt={`${participant.name}`}/>{participant.username}</Link>)}\n                    </Col>\n                    <Col lg={4}>\n                        <h5>Apuntados: {activity.participants.length} de {activity.maxParticipants}</h5>\n                    </Col>\n                </Row>\n                \n                <Row className=\"activityControlView-buttons\">\n                    <Button variant=\"warning\" onClick={() => this.props.onEditClick(this.props.activityIdx)}>Editar actividad</Button>\n                    <Button variant=\"danger\" onClick={() => this.props.onDeleteClick(activity._id)}>Eliminar actividad</Button>\n                </Row>\n            </Container>\n        )\n    }  \n}","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport GoogleSearchBox from \"../../components/googleSearchBox/googleSearchBox\";\nimport ActivitiesServices from '../../services/activities';\nimport FilesServices from '../../services/files';\n\nexport default class EditActivityForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            activity: {\n                title: this.props.activity.title,\n                description: this.props.activity.description,\n                location: this.props.activity.location,\n                coord: this.props.activity.coord,\n                dates: this.props.activity.dates,\n                time: this.props.activity.time,\n                category: this.props.activity.category,\n                minParticipants: this.props.activity.minParticipants,\n                maxParticipants: this.props.activity.maxParticipants,\n                requirements: this.props.activity.requirements,\n                imgPath: this.props.activity.imgPath\n            }\n        }\n\n        this.activitiesServices = new ActivitiesServices();\n        this.filesServices = new FilesServices();\n    }\n\n    \n    handleChange = e => {\n        let { name, value } = e.target;\n        this.setState({\n            activity: { ...this.state.activity, [name]: value }\n        })\n    }\n\n    handleFileUpload = e => {\n        const uploadData = new FormData()\n        uploadData.append(\"imgPath\", e.target.files[0])\n        this.filesServices.handleUpload(uploadData)\n            .then(response => {\n                console.log('Subida de archivo finalizada! La URL de Cloudinary es: ', response.secure_url)\n                this.setState({\n                    activity: { ...this.state.activity, imgPath: response.secure_url }\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    updateStateWithLocation = dataFromChild => {\n        this.setState({\n            activity: {...this.state.activity, location: dataFromChild.location, coord: { lat: dataFromChild.coord.lat, lng: dataFromChild.coord.lng } } \n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.saveChanges();\n    }\n\n    saveChanges = () => {\n        this.activitiesServices.updateActivity(this.props.activity._id, this.state.activity)\n            .then(() => this.finishAction())\n            .catch(err => console.log(err))\n    }\n\n    finishAction = () => {\n        this.props.closeModal();\n        this.props.refreshData();\n    }\n\n    render() {\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                <Form.Row>\n                    <Form.Group as={Col} xs={7}>\n                        <Form.Label>Título:</Form.Label>\n                        <Form.Control type=\"text\" name=\"title\" value={this.state.activity.title} onChange={this.handleChange} placeholder=\"\" required />\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                    <Form.Group as={Col} xs={4}> \n                        <Form.Label>Categoría:</Form.Label>\n                        <Form.Control as=\"select\" name=\"category\" value={this.state.activity.category.name} onChange={this.handleChange} required>\n                            <option value=\"\" disabled defaultValue>Selecciona una categoría</option>\n                            <option value=\"ambiental\">Ambiental</option>\n                            <option value=\"comunitario\">Comunitario</option>\n                            <option value=\"cultural\">Cultural</option>\n                            <option value=\"deportivo\">Deportivo</option>\n                            <option value=\"educativo\">Educativo</option>\n                            <option value=\"ocio y tiempo libre\">Ocio y tiempo libre</option>\n                            <option value=\"proteccion civil\">Protección civil</option>\n                            <option value=\"social\">Social</option>\n                            <option value=\"socio-sanitario\">Socio-sanitario</option>\n                            <option value=\"otro\">Otro</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col} xs={4}>\n                        <Form.Label>Fecha:</Form.Label>\n                        <Form.Control type=\"date\" name=\"dates\" value={this.state.activity.dates} onChange={this.handleChange} placeholder=\"\" required />\n                    </Form.Group>\n\n                    <Form.Group as={Col} xs={4}>\n                        <Form.Label>Hora:</Form.Label>\n                        <Form.Control type=\"text\" name=\"time\" value={this.state.activity.time} onChange={this.handleChange} placeholder=\"10:00 h - 13:00 h\" />\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                    <Form.Group as={Col} xs={6}>\n                        <Form.Label>Descripción:</Form.Label>\n                        <Form.Control as=\"textarea\" rows=\"5\" name=\"description\" value={this.state.activity.description} onChange={this.handleChange} placeholder=\"Indica aquí la descripción de la actividad, en qué consiste y todos aquellos datos que sean de interés\" required />\n                    </Form.Group>\n\n                    <Form.Group as={Col} xs={6}>\n                        <Form.Label>Requerimientos:</Form.Label>\n                        <Form.Control as=\"textarea\" rows=\"5\" name=\"requirements\" value={this.state.activity.requirements} onChange={this.handleChange} placeholder=\"Indica aquí los requerimientos necesarios para poder ejercer como voluntario en esta actividad\" required />\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                    <Form.Group as={Col} xs={12}>\n                        <Form.Label>Ubicación:</Form.Label>\n                        <GoogleSearchBox selectLocation={(dataFromChild) => this.updateStateWithLocation(dataFromChild)}></GoogleSearchBox>\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                    <Form.Group as={Col} xs={3}>\n                        <Form.Label>Número mínimo de participantes:</Form.Label>\n                        <Form.Control type=\"number\" min=\"1\" max=\"100\" name=\"minParticipants\" value={this.state.activity.minParticipants} onChange={this.handleChange} required />\n                    </Form.Group>\n\n                    <Form.Group as={Col} xs={3}>\n                        <Form.Label>Número máximo de participantes:</Form.Label>\n                        <Form.Control type=\"number\" min=\"1\" max=\"100\" name=\"maxParticipants\" value={this.state.activity.maxParticipants} onChange={this.handleChange} required />\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                    <Form.Group as={Col}>\n                        <Form.Label>Imagen de la actividad:</Form.Label>\n                        <Form.Control type=\"file\" name=\"imgPath\" onChange={this.handleFileUpload} />\n                    </Form.Group>\n                </Form.Row>\n                <Button variant=\"primary\" type=\"submit\">Guardar cambios</Button>\n            </Form>\n        )\n    }\n}\n","import React from \"react\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Button from 'react-bootstrap/Button';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Modal from 'react-bootstrap/Modal';\nimport OrganizationDetails from '../organizationDetails/OrganizationDetails';\nimport EditOrganizationForm from '../editOrganizationForm/EditOrganizationForm';\nimport ActivityControlView from '../activityControlView/ActivityControlView';\nimport EditActivityForm from '../editActivityForm/EditActivityForm';\nimport OrganizationsServices from \"../../services/organizations\";\nimport ActivitiesServices from \"../../services/activities\";\nimport './ControlPanel.scss';\n\n\nexport default class ControlPanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            organization: null,\n            activities: [],\n            activityToEdit: null,\n            showOrganizationModal: false,\n            showActivityModal: false\n        }\n\n        this.activitiesServices = new ActivitiesServices();\n        this.organizationsServices = new OrganizationsServices();\n    }\n\n    componentDidMount = () => this.getOrganization();\n\n    getOrganization = () => {\n        this.organizationsServices.getOrganizationByUser(this.props.loggedInUser._id)\n        .then(organization => {\n            this.setState({ organization: organization[0] }, () => this.getActivitiesByOrganization())\n        })\n        .catch(err => console.log(err));\n    }\n\n    getActivitiesByOrganization = () => {\n        this.activitiesServices.getActivitiesByOrganization(this.state.organization._id)\n        .then(foundActivities => this.setState({ activities: foundActivities }))\n        .catch(err => console.log(err))\n    }\n\n    getActivityToEdit = (activityIdx) => {\n        const [activityToEdit] = this.state.activities.slice(activityIdx, activityIdx + 1);\n        this.setState({ activityToEdit: activityToEdit }, () => this.openActivityModal());\n    }\n\n    deleteActivity(activityId) {\n        this.activitiesServices.deleteActivity(activityId)\n        .then(() => this.getActivitiesByOrganization())\n        .catch(err => console.log(err))\n    }\n\n    openOrganizationModal = () => this.setState({ showOrganizationModal: true });\n    closeOrganizationModal = () => this.setState({ showOrganizationModal: false });\n\n    openActivityModal = () => this.setState({ showActivityModal: true });\n    closeActivityModal = () => this.setState({ showActivityModal: false });\n\n    \n\n    render() {\n        return(\n            <div className=\"controlPanel\">\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"organizationProfile\">\n                    <Row>\n                        <Col sm={2} className=\"controlPanel-menu\">\n                            <Nav variant=\"pills\" className=\"flex-column\">\n                                <Nav.Item>\n                                    <h5>Panel de control</h5>\n                                    <Nav.Link eventKey=\"organizationProfile\">Perfil de la organización</Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link eventKey=\"activitiesManagement\">Gestión de actividades</Nav.Link>\n                                </Nav.Item>\n                            </Nav>\n                        </Col>\n                        <Col>\n                            {this.state.organization ? (\n                                <Tab.Content className=\"controlPanel-mainContent\">\n                                    <Tab.Pane eventKey=\"organizationProfile\">\n                                        <div className=\"organizationProfile\">\n                                            <h3>Perfil de la organización</h3>\n                                            <OrganizationDetails key={Math.random() * 100000} organization={this.state.organization} loggedInUser={this.props.loggedInUser}></OrganizationDetails>\n                                            <Button variant=\"warning\" onClick={this.openOrganizationModal}>Editar datos</Button>\n                                        </div>\n\n                                        <Modal size=\"lg\" show={this.state.showOrganizationModal} onHide={this.closeOrganizationModal}>\n                                            <Modal.Header closeButton>\n                                                <Modal.Title>Editar perfil de la organización</Modal.Title>\n                                            </Modal.Header>\n                                            <Modal.Body>\n                                                <EditOrganizationForm organization={this.state.organization} closeModal={this.closeOrganizationModal} refreshData={this.getOrganization} />\n                                            </Modal.Body>\n                                        </Modal>\n                                    </Tab.Pane>\n                                    <Tab.Pane eventKey=\"activitiesManagement\">\n                                        <div className=\"activitiesManagement\">\n                                            <h3>Gestión de actividades</h3>\n                                            {this.state.activities.length ? (\n                                                this.state.activities.map((activity, idx) => <ActivityControlView key={idx} activityIdx={idx} activity={activity} onEditClick={(idx) => this.getActivityToEdit(idx)} onDeleteClick={activityId => this.deleteActivity(activityId)}/>)\n                                            ) : (\n                                                <h5>Esta organización aún no ha dado de alta actividades.</h5>\n                                            )}\n                                        </div>\n\n                                        <Modal size=\"lg\" show={this.state.showActivityModal} onHide={this.closeActivityModal}>\n                                            <Modal.Header closeButton>\n                                                <Modal.Title>Editar actividad</Modal.Title>\n                                            </Modal.Header>\n                                            <Modal.Body>\n                                                <EditActivityForm activity={this.state.activityToEdit} closeModal={this.closeActivityModal} refreshData={this.getActivitiesByOrganization} />\n                                            </Modal.Body>\n                                        </Modal>\n                                    </Tab.Pane>\n                                </Tab.Content>\n                            ) : (\n                                <Spinner animation=\"border\" role=\"status\">\n                                    <span className=\"sr-only\">Cargando...</span>\n                                </Spinner>\n                            )}\n                        </Col>\n                    </Row>\n                </Tab.Container>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport AuthServices from './services/auth';\nimport NavBar from './components/navbar/NavBar';\nimport Footer from './components/footer/Footer';\nimport Signup from './components/auth/Signup';\nimport Login from './components/auth/Login';\nimport Home from './components/home/Home';\nimport Categories from './components/categories/Categories';\nimport ActivitiesByCategory from './components/activitiesByCategory/ActivitiesByCategory';\nimport AllActivities from './components/allActivities/AllActivities';\nimport ActivityDetails from './components/activityDetails/ActivityDetails';\nimport NewOrganization from './components/newOrganization/NewOrganization';\nimport OrganizationDetails from './components/organizationDetails/OrganizationDetails';\nimport NewActivity from './components/newActivity/NewActivity';\nimport SearchResult from './components/searchResult/SearchResult';\nimport UserProfile from './components/userProfile/UserProfile';\nimport ControlPanel from './components/controlPanel/ControlPanel';\n\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loggedInUser: null\n    };\n\n    this.authServices = new AuthServices();\n  }\n\n  componentDidMount = () => this.fetchUser();\n\n  setUser = userObj => {\n    this.setState({\n      loggedInUser: userObj\n    });\n  };\n\n  fetchUser() {\n    return this.authServices.loggedin()\n    .then(user => {\n      this.setState({\n        loggedInUser: user,\n      });\n    })\n    .catch(err => {\n      this.setState({\n        loggedInUser: false,\n      });\n    });\n  }\n\n  logout = () => {\n    this.authServices.logout().then(() => {\n      this.setState({ loggedInUser: null });\n    });\n  };\n\n\n  render() {\n    const { loggedInUser } = this.state;\n\n    return (\n      <div className=\"App\">\n        <NavBar userInSession={this.state.loggedInUser} logout={this.logout} />\n\n        {loggedInUser ? (\n          <>\n            <Redirect to=\"/home\" />\n            <Switch>\n              <Route exact path=\"/home\" component={Home} /> \n              <Route exact path=\"/categories\" render={() => <Categories {...this.state} />} /> \n              <Route exact path=\"/categories/:name\" render={props => <ActivitiesByCategory {...props} />} />\n              <Route exact path=\"/activities\" render={() => <AllActivities />} />\n              <Route exact path=\"/activities/details/:id\" render={props => <ActivityDetails {...props} loggedInUser={this.state.loggedInUser}/>} />\n              <Route exact path=\"/activities/search/:searchTerm\" render={props => <SearchResult {...props} loggedInUser={this.state.loggedInUser} />} />\n              <Route exact path=\"/activities/new\" render={props => <NewActivity {...props} loggedInUser={this.state.loggedInUser}/>} /> \n              <Route exact path=\"/organizations/new\" render={props => <NewOrganization {...props} loggedInUser={this.state.loggedInUser}/>} /> \n              <Route exact path=\"/organizations/details/:id\" render={props => <OrganizationDetails {...props} loggedInUser={this.state.loggedInUser}/>} /> \n              <Route exact path=\"/users/:id\" render={props => <UserProfile {...props} loggedInUser={this.state.loggedInUser}/>} /> \n              <Route exact path=\"/controlpanel\" render={props => <ControlPanel {...props} loggedInUser={this.state.loggedInUser}/>} /> \n            </Switch>\n            <Footer />\n          </>\n        ) : (\n          <>\n            <Redirect to=\"/home\" />\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route exact path=\"/login\" render={props => <Login {...props} setUser={user => this.setUser(user)} />} />\n\t\t\t\t\t\t\t<Route exact path=\"/signup\" render={() => <Signup setUser={user => this.setUser(user)} />} />\n              <Route exact path=\"/home\" component={Home} /> \n              <Route exact path=\"/categories\" render={() => <Categories {...this.state} />} /> \n              <Route exact path=\"/categories/:name\" render={props => <ActivitiesByCategory {...props} />} />\n              <Route exact path=\"/activities\" render={() => <AllActivities />} />\n              <Route exact path=\"/activities/details/:id\" render={props => <ActivityDetails {...props} loggedInUser={this.state.loggedInUser}/>} />\n              <Route exact path=\"/activities/search/:searchTerm\" render={props => <SearchResult {...props} loggedInUser={this.state.loggedInUser} />} />\n              <Route exact path=\"/organizations/details/:id\" render={props => <OrganizationDetails {...props} loggedInUser={this.state.loggedInUser}/>} /> \n\t\t\t\t\t\t</Switch>\n            <Footer />\n          </>\n        )}\n      </div>\n    )\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}