{"version":3,"sources":["services/auth.js","components/navbar/NavBar.js","components/footer/Footer.js","components/auth/Signup.js","components/auth/Login.js","components/searchBar/SearchBar.js","components/categoryCard/CategoryCard.js","services/activities.js","components/home/Home.js","components/categories/Categories.js","components/activityOverview/ActivityOverview.js","components/activitiesByCategory/ActivitiesByCategory.js","components/allActivities/AllActivities.js","services/users.js","components/map/Map.js","components/activityDetails/ActivityDetails.js","services/organizations.js","services/files.js","components/newOrganization/NewOrganization.js","components/organizationDetails/OrganizationDetails.js","components/googleSearchBox/googleSearchBox.js","components/newActivity/NewActivity.js","components/searchResult/SearchResult.js","components/userProfile/UserProfile.js","components/editOrganizationForm/EditOrganizationForm.js","components/activityControlView/ActivityControlView.js","components/editActivityForm/EditActivityForm.js","components/controlPanel/ControlPanel.js","App.js","serviceWorker.js","index.js"],"names":["Services","signup","username","password","email","role","service","post","then","response","data","login","logout","loggedin","get","this","axios","create","baseURL","process","withCredentials","NavBar","props","handleLogout","e","authServices","AuthServices","userInSession","Navbar","sticky","bg","expand","Brand","className","to","src","alt","Toggle","aria-controls","Collapse","id","Nav","Link","as","DropdownButton","alignRight","title","_id","onClick","imgPath","React","Component","Footer","Container","fluid","Row","Col","xs","Signup","handleChange","target","name","value","setState","handleSubmit","preventDefault","postUser","state","theLoggedNewUser","setUser","history","push","catch","err","console","log","Form","onSubmit","Group","Label","Control","onChange","required","disabled","defaultValue","type","Button","error","Login","theLoggedUser","SearchBar","searchTerm","redirect","InputGroup","FormControl","size","placeholder","Append","CategoryCard","category","Card","Img","variant","Body","Title","charAt","toUpperCase","slice","Text","description","getAllActivities","getActivityDetails","getActivitiesByTerm","getActivitiesByCategory","getActivitiesByParticipant","participant","getActivitiesByOrganization","organization","createActivity","newActivity","updateActivity","fieldToUpdate","put","addParticipant","idActivity","idUser","deleteParticipant","deleteActivity","delete","Home","componentDidMount","featuredCategories","length","activitiesServices","allActivities","allCategories","Set","map","activity","JSON","stringify","x","parse","someCategories","filter","includes","loggedInUser","ActivitiesServices","Carousel","Item","idx","key","Spinner","animation","Categories","ActivityOverview","lg","Badge","pill","dates","date","moment","format","maxParticipants","participants","isOwner","clickToDelete","Activities","activities","match","params","handleDateFilter","selectedDate","categoryName","AllActivities","handleCategoryFilter","newFilter","filteredCategories","categoryIndex","indexOf","splice","filteredActivities","Check","label","activityFilteredByDate","getAllUsers","getUserDetails","updateUser","updateUserFav","userId","activityId","Geocode","setApiKey","enableDebug","Map","onInfoWindowClose","event","mapPosition","lat","center","lng","markerPosition","AsyncMap","withScriptjs","withGoogleMap","google","defaultZoom","zoom","defaultCenter","draggable","position","undefined","googleMapURL","loadingElement","style","height","containerElement","mapElement","ActivityDetails","getSpecificActivity","specificActivity","userIsParticipant","activityIsFav","find","favActivities","addActivityToFav","usersServices","newParticipant","updatedActivity","UsersServices","requirements","time","minParticipants","width","border","overflow","scrolling","allow","href","data-size","data-lang","data-show-count","async","charSet","location","coord","getAllOrganizations","getOrganizationDetails","getOrganizationByUser","updateOrganization","updatedObject","createOrganization","newOrganization","FilesServices","handleUpload","theFile","NewOrganization","handleFileUpload","uploadData","FormData","append","files","filesServices","secure_url","closeModal","showModal","openModal","address","webpage","phone","user","organizationsServices","OrganizationsServices","rows","Modal","show","onHide","Header","closeButton","OrganizationDetails","getOrganization","rel","SearchBox","handleSelect","geocodeByAddress","results","getLatLng","latLng","selectLocation","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","suggestion","active","backgroundColor","cursor","NewActivity","fetchOrganization","updateStateWithLocation","dataFromChild","userOrganization","min","max","SearchResult","getSearchResults","foundActivities","UserProfile","getUserInfo","checkOwner","getActivitiesWhereUserIsParticipant","deleteParticipation","EditOrganizationForm","saveChanges","finishAction","refreshData","ActivityControlView","onEditClick","activityIdx","onDeleteClick","EditActivityForm","ControlPanel","hasOrganization","getActivityToEdit","activityToEdit","openActivityModal","openOrganizationModal","showOrganizationModal","closeOrganizationModal","showActivityModal","closeActivityModal","Tab","defaultActiveKey","sm","eventKey","Content","Pane","Math","random","App","fetchUser","userObj","exact","path","component","render","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8e190ce3.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default class Services {\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/auth`,\n            withCredentials: true\n        })\n    }\n\n    signup = ({ username, password, email, role }) => this.service.post('/signup', { username, password, email, role }).then(response => response.data);\n\n    login = ({ username, password }) => {\n        return this.service.post('/login', { username, password }).then(response => response.data);\n    }\n\n    logout = () => this.service.post('/logout').then(response => response.data);\n    \n    loggedin = () => this.service.get('/loggedin').then(response => response.data);\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthServices from \"../../services/auth\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Nav from \"react-bootstrap/Nav\";\nimport \"./NavBar.scss\";\n\nexport default class NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.authServices = new AuthServices();\n  }\n\n  handleLogout = e => {\n    this.props.logout();\n  };\n\n  render() {\n    if (this.props.userInSession) {\n      return (\n        <Navbar sticky=\"top\" bg=\"light\" expand=\"lg\">\n          <Navbar.Brand className=\"navbar-brand\"><Link to=\"/home\"><img className=\"navbar-logo\" src=\"https://res.cloudinary.com/yelpcampagb/image/upload/v1583620107/ironhack-project3/inemcz4pjwjcfqppheev.png\" alt=\"SUMA logo\"/></Link></Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link as={Link} to=\"/home\">Home</Nav.Link>\n              <Nav.Link as={Link} to=\"/categories\">Categorías</Nav.Link>\n              <Nav.Link as={Link} to=\"/activities\">Actividades</Nav.Link>\n            </Nav>\n            {this.props.userInSession.role === 'organization' ? (\n              <>\n                <Link to=\"/organizations/new\" className=\"navLink-create\">Crear organización</Link>\n                <Link to=\"/activities/new\" className=\"navLink-create\">Crear actividad</Link>\n              </>\n            ) : (\n              <></>\n            )}\n            <DropdownButton className=\"navbar-dropdown\"\n              alignRight\n              title={this.props.userInSession.username}\n            >\n              {this.props.userInSession.role === 'organization' ? (\n                <Link to=\"/controlpanel\" className=\"navbar-userLink\">Panel de control</Link>\n              ) : (\n                <></>\n              )}\n              <Link to={`/users/${this.props.userInSession._id}`} className=\"navbar-userLink\">Mi perfil</Link>\n              <Link to=\"/home\" onClick={this.handleLogout} className=\"navbar-userLink\">Logout</Link>\n            </DropdownButton>\n\n            <span className=\"navbar-avatar\"><img src={this.props.userInSession.imgPath} alt=\"\"/></span>\n          </Navbar.Collapse>\n        </Navbar>\n      );\n    } else {\n      return (\n        <Navbar sticky=\"top\" bg=\"light\" expand=\"lg\">\n          <Navbar.Brand className=\"navbar-brand\"><Link to=\"/home\"><img className=\"navbar-logo\" src=\"https://res.cloudinary.com/yelpcampagb/image/upload/v1583620107/ironhack-project3/inemcz4pjwjcfqppheev.png\" alt=\"SUMA logo\"/></Link></Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link as={Link} to=\"/home\">Home</Nav.Link>\n              <Nav.Link as={Link} to=\"/categories\">Categorías</Nav.Link>\n              <Nav.Link as={Link} to=\"/activities\">Actividades</Nav.Link>\n            </Nav>\n              <Link to=\"/signup\" className=\"navLink\">Regístrate</Link>\n              <Link to=\"/login\" className=\"navLink navLink-right\">Inicia sesión</Link>\n          </Navbar.Collapse>\n        </Navbar>\n      );\n    }\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport './Footer.scss';\n\n\nconst Footer = () => {\n    return (\n        <Container fluid>\n        <Row className=\"footer\">\n            <Col><img src=\"https://res.cloudinary.com/yelpcampagb/image/upload/v1583620107/ironhack-project3/inemcz4pjwjcfqppheev.png\" alt=\"\"/></Col>\n            <Col xs={6}>\n                <Link to=\"#\">Quiénes somos</Link>\n                <Link to=\"#\">Preguntas frecuentes</Link>\n                <Link to=\"#\">Contacto</Link>\n            </Col>\n            <Col>\n                <img src=\"https://res.cloudinary.com/yelpcampagb/image/upload/v1584100201/ironhack-project3/lub9wr1pussxcbslmnrz.png\" alt=\"facebook icon\" className=\"socialIcon\"/>\n                <img src=\"https://res.cloudinary.com/yelpcampagb/image/upload/v1584100201/ironhack-project3/ms4fuuy3yrvqc2cxztpw.png\" alt=\"instagram icon\" className=\"socialIcon\"/>\n                <img src=\"https://res.cloudinary.com/yelpcampagb/image/upload/v1584100201/ironhack-project3/rap7hmsx1uqlwxcjttxr.png\" alt=\"youtube icon\" className=\"socialIcon\"/>\n                <img src=\"https://res.cloudinary.com/yelpcampagb/image/upload/v1584100201/ironhack-project3/nk6xfzehvrxjomjjwsa6.png\" alt=\"twitter icon\" className=\"socialIcon\"/>\n            </Col>\n        </Row>\n        </Container>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport AuthServices from '../../services/auth';\nimport './Signup.scss';\n\nexport default class Signup extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            username: '',\n            password: '',\n            email: '',\n            role: ''\n        }\n\n        this.authServices = new AuthServices()\n    }\n\n    handleChange = e => {\n        let { name, value } = e.target;\n        this.setState({ [name]: value })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.postUser();\n    }\n\n    postUser = () => {\n        this.authServices.signup(this.state)\n        .then(theLoggedNewUser => {\n            this.setState({ username: '', password: '' })\n            this.props.setUser(theLoggedNewUser)\n            this.props.history.push('/home')\n        })\n        .catch(err => console.log(err))\n    }\n\n    render() {\n        return (\n            <div className=\"signup\">\n                <div className=\"signupForm\">\n                    <h1>¡Únete y suma!</h1>\n                    <Form onSubmit={this.handleSubmit}>\n                        <Form.Group> \n                            <Form.Label>Soy:</Form.Label>\n                                <Form.Control as=\"select\" name=\"role\" value={this.state.role} onChange={this.handleChange} required >\n                                    <option value=\"\" disabled defaultValue>Selecciona tu rol</option>\n                                    <option value=\"volunteer\">Voluntario</option>\n                                    <option value=\"organization\">Organización</option>\n                                </Form.Control>\n                        </Form.Group>\n                        <Form.Group> \n                            <Form.Label>Email:</Form.Label>\n                            <Form.Control type=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange} required />\n                        </Form.Group>\n                        <Form.Group> \n                            <Form.Label>Usuario:</Form.Label>\n                            <Form.Control type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} required />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Contraseña:</Form.Label>\n                            <Form.Control type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} required />\n                        </Form.Group>\n                        <Form.Group className=\"signupBtn\">\n                            <Button type=\"submit\">Registrarse</Button>\n                        </Form.Group>\n                    </Form>\n                </div>\n\n                <div>\n                    <span>¿Ya tienes una cuenta? <Link to=\"/login\">Inicia sesión</Link></span>\n                    <h1>{this.state.error ? 'Error' : ''}</h1>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport AuthServices from '../../services/auth';\nimport './Login.scss';\n\nexport default class Login extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: '',\n            password: ''\n        }\n\n        this.authServices = new AuthServices()\n    }\n\n    handleChange = e => {\n        let { name, value } = e.target\n        this.setState({ [name]: value })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.postUser();\n    }\n\n    postUser = () => {\n        this.authServices.login(this.state)\n        .then(theLoggedUser => {\n                this.setState({ username: '', password: '' })\n                this.props.setUser(theLoggedUser)\n                this.props.history.push('/home')\n            })\n            .catch(err => console.log( err ))\n    }\n\n    render() {\n        return (\n            <div className=\"login\">\n                <div className=\"loginForm\">\n                    <h1>¡Nos encanta que vuelvas!</h1>\n                    <Form onSubmit={this.handleSubmit}>\n                        <Form.Group> \n                            <Form.Label>Usuario:</Form.Label>\n                            <Form.Control type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} required />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Contraseña:</Form.Label>\n                            <Form.Control type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} required />\n                        </Form.Group>\n                        <Form.Group className=\"loginBtn\">\n                            <Button type=\"submit\">Iniciar sesión</Button>\n                        </Form.Group>\n                    </Form>\n                </div>\n\n                <div>\n                    <span className=\"lnk\">¿Aún no tienes una cuenta? <Link to=\"/signup\">Regístrate</Link></span>\n                    <h1>{this.state.error ? 'Error' : ''}</h1>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl';\nimport './SearchBar.scss';\n\nexport default class SearchBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            searchTerm: \"\",\n            redirect: null\n        }\n    }\n\n    handleChange = e => {\n        this.setState({ searchTerm: e.target.value })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.setState({ redirect: `/activities/search/${this.state.searchTerm}`})\n    }\n\n    render() {\n        if(this.state.redirect) {\n            return <Redirect to={this.state.redirect} />\n        }\n        return(\n            <InputGroup className=\"mb-3 searchBar\">\n                <FormControl type=\"text\" size=\"lg\" name=\"query\" value={this.state.searchTerm} onChange={this.handleChange} placeholder=\"Busca tu actividad de voluntariado\" />\n                <InputGroup.Append>\n                    <Button type=\"submit\" onClick={(e) => this.handleSubmit(e)}>Buscar</Button>\n                </InputGroup.Append>\n            </InputGroup>\n        )\n    }\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport './CategoryCard.scss';\n\nexport default class CategoryCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    render() {\n        let category = this.props.category;\n        return (\n            <>\n                <Card className=\"categoryCard\">\n                    <Card.Img variant=\"top\" src={category.imgPath} />\n                    <Card.Body className=\"categoryCard-body\">\n                        <div className=\"categoryCard-text\">\n                            <Card.Title>{category.name.charAt(0).toUpperCase() + category.name.slice(1)}</Card.Title>\n                            <Card.Text>{category.description}</Card.Text>\n                        </div>\n                        <div className=\"categoryCard-button\">\n                            <Link to={`/categories/${category.name}`}><Button variant=\"primary\">Ver actividades</Button></Link>\n                        </div>\n                    </Card.Body>\n                </Card>\n            </>\n        );\n    }\n}","import axios from 'axios';\n\nexport default class Services {\n\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/activities`,\n            withCredentials: true\n        })\n    }\n\n    getAllActivities = () => this.service.get('/all').then(response => response.data);\n    \n    getActivityDetails = id => this.service.get(`/${id}`).then(response => response.data);\n\n    getActivitiesByTerm = searchTerm => this.service.get(`/search/${searchTerm}`).then(response => response.data);\n\n    getActivitiesByCategory = category => this.service.get(`/categories/${category}`).then(response => response.data);\n\n    getActivitiesByParticipant = participant => this.service.get(`/participants/${participant}`).then(response => response.data);\n\n    getActivitiesByOrganization = organization => this.service.get(`/organization/${organization}`).then(response => response.data);\n\n    createActivity = newActivity => this.service.post('/new', newActivity).then(response => response.data);\n\n    updateActivity = (id, fieldToUpdate) => this.service.put(`/${id}`, fieldToUpdate).then(response => response.data);\n\n    addParticipant = (idActivity, idUser) => this.service.put(`/${idActivity}/participants/add`, idUser).then(response => response.data);\n\n    deleteParticipant = (idActivity, idUser) => this.service.put(`/${idActivity}/participants/delete`, idUser).then(response => response.data);\n\n    deleteActivity = id => this.service.delete(`/${id}`).then(response => response.data);\n}","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport SearchBar from '../searchBar/SearchBar';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Button from 'react-bootstrap/Button';\nimport CategoryCard from \"../categoryCard/CategoryCard\";\nimport ActivitiesServices from \"../../services/activities\";\nimport './Home.scss';\n\nexport default class Home extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loggedInUser: null,\n            featuredCategories: []\n          };\n      \n          this.activitiesServices = new ActivitiesServices();\n    }\n\n    componentDidMount = () => this.getAllActivities();\n      \n    getAllActivities = () => {\n        if (this.state.featuredCategories.length === 0) {\n        this.activitiesServices.getAllActivities()\n            .then(allActivities => {\n                let allCategories = [...new Set(allActivities.map(activity => JSON.stringify(activity.category)))].map(x => JSON.parse(x));\n                let someCategories = [\"social\", \"comunitario\", \"ambiental\", \"deportivo\"];\n                let featuredCategories = allCategories.filter(category => someCategories.includes(category.name));\n                this.setState({ featuredCategories: featuredCategories })\n            })\n            .catch(err => console.log(err));\n        }\n    };\n\n    render() {\n        return(\n            <div className=\"home\">\n                <section className=\"hero\">\n                    <div className=\"home-searchBar\">\n                        <SearchBar />\n                    </div>\n            \n                    <Carousel className=\"home-carousel\">\n                        <Carousel.Item>\n                            <img    \n                                className=\"d-block w-100\"\n                                src=\"https://res.cloudinary.com/yelpcampagb/image/upload/v1584060008/ironhack-project3/ipdfcseopgfca6kcp6wn.jpg\"\n                                alt=\"First slide\"\n                            />\n                        </Carousel.Item>\n                        <Carousel.Item>\n                            <img\n                                className=\"d-block w-100\"\n                                src=\"https://res.cloudinary.com/yelpcampagb/image/upload/v1584059411/ironhack-project3/yeoece4davshjf1qga6h.jpg\"\n                                alt=\"Second slide\"\n                            />\n                        </Carousel.Item>\n                        <Carousel.Item>\n                            <img\n                                className=\"d-block w-100\"\n                                src=\"https://res.cloudinary.com/yelpcampagb/image/upload/v1584060008/ironhack-project3/t7bl2g1efiz9d8gwtr49.jpg\"\n                                alt=\"Third slide\"\n                            />\n                        </Carousel.Item>\n                        <Carousel.Item>\n                            <img\n                                className=\"d-block w-100\"\n                                src=\"https://res.cloudinary.com/yelpcampagb/image/upload/v1584059411/ironhack-project3/a8ic0tuxntk2furby3hz.jpg\"\n                                alt=\"Fourth slide\"\n                            />\n                        </Carousel.Item>\n                    </Carousel>\n                </section>\n\n                <section className=\"featuredCategories\">\n                    {this.state.featuredCategories.length ? (\n                        <>\n                            <h1>Categorías destacadas</h1>\n                            <div className=\"categoryList\">\n                                {this.state.featuredCategories.map((category, idx) => <CategoryCard key={idx} category={category} />)}\n                            </div>\n                            <Link to=\"/categories\"><Button variant=\"outline-primary\" size=\"lg\">Ver todas las categorías</Button></Link>\n                        </>\n                    ) : (\n                        <Spinner animation=\"border\" role=\"status\">\n                            <span className=\"sr-only\">Cargando...</span>\n                        </Spinner>\n                    )}\n                </section>\n\n                <section className=\"activitiesSection\">\n                    <div className=\"activities-container\">\n                        <div className=\"activities-image\">\n                            <img src=\"https://res.cloudinary.com/yelpcampagb/image/upload/v1584096845/ironhack-project3/dwvuai9izlivpm6hkozc.jpg\" alt=\"activities section\"/>\n                        </div>\n                        <div className=\"activities-quote\">\n                            <h1 className=\"quote1\">Cambia tu vida</h1>\n                            <h1 className=\"quote2\">ayudando a los demás</h1>\n                            <Link to=\"/activities\"><Button variant=\"outline-primary\" size=\"lg\">Ver todas las actividades</Button></Link>\n                        </div>\n                    </div>\n                </section>\n\n                <section className=\"infoSection\">\n                    <img src=\"https://res.cloudinary.com/yelpcampagb/image/upload/v1583620107/ironhack-project3/inemcz4pjwjcfqppheev.png\" alt=\"suma logo\"/>\n                    <div className=\"infoSection-text\">\n                        <h3>Encuentra actividades de voluntariado de manera sencilla</h3>\n                        <h3>y empieza a colaborar en aquellas causas que te interesan</h3>\n                        \n                    </div>\n                    <span className=\"horLine\"></span>\n                </section>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport Spinner from 'react-bootstrap/Spinner';\nimport Container from 'react-bootstrap/Container';\nimport ActivitiesServices from \"../../services/activities\";\nimport CategoryCard from \"../categoryCard/CategoryCard\";\nimport \"./Categories.scss\";\n\nexport default class Categories extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loggedInUser: null,\n      allActivities: [],\n      allCategories: []\n    };\n\n    this.activitiesServices = new ActivitiesServices();\n  }\n\n  componentDidMount = () => this.getAllActivities();\n\n  getAllActivities = () => {\n    if (this.state.allActivities.length === 0) {\n      this.activitiesServices.getAllActivities()\n        .then(allActivities => {\n          let allCategories = [...new Set(allActivities.map(activity => JSON.stringify(activity.category)))].map(x => JSON.parse(x));\n          this.setState({ allActivities: allActivities, allCategories: allCategories })\n        })\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    return (\n      <Container>\n        <h1 className=\"categories-title\">Voluntariado por categorías</h1>\n        {this.state.allCategories.length ? (\n          <div className=\"categoryList\">\n            {this.state.allCategories.map((category, idx) => <CategoryCard key={idx} category={category} />)}\n          </div>\n        ) : (\n          <Spinner animation=\"border\" role=\"status\">\n            <span className=\"sr-only\">Cargando...</span>\n          </Spinner>\n        )}\n      </Container>\n    );\n  }\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./ActivityOverview.scss\";\n\n\nexport default class ActivityOverview extends React.Component {\n    render() {\n        let activity = this.props.activity;\n        return (\n            <Container fluid className=\"activityOverview\">\n                <Row>\n                    <Col lg={4} className=\"imageCol\">\n                        <img className=\"activityImage\" src={activity.imgPath} alt={activity.title} />\n                    </Col>\n                    <Col lg={8}>\n                        <Row>\n                            <h3>{activity.title}</h3>\n                        </Row>\n                        <Row>\n                            <Col lg={7} className=\"secondCol\">\n                                <h6>Categoría: <Badge pill variant=\"info\">{activity.category.name}</Badge></h6>\n                                <h6>Fechas:</h6>\n                                <ul>\n                                    {activity.dates.map((date, idx) => <li key={idx}>{moment(date).format('DD/MM/YYYY')}</li>)}\n                                </ul>\n                                <h6>Plazas vacantes: {activity.maxParticipants - activity.participants.length}</h6>\n                            </Col>\n                            <Col lg={5} className=\"organizationCol\">\n                                <h6>Organización: <Link to={`/organizations/details/${activity.organization._id}`}>{activity.organization.name}</Link></h6>\n                                <img src={activity.organization.imgPath} alt={`${activity.organization.name}`} />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col lg={8} className=\"activityOverview-buttons\">\n                                <Link to={`/activities/details/${activity._id}`}><Button>Más info</Button></Link>\n                                {this.props.isOwner && this.props.clickToDelete ? (\n                                    <Button variant=\"danger\" onClick={() => this.props.clickToDelete(activity._id)}>Retirar participación</Button>\n                                ) : (\n                                    \"\"\n                                )}\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }  \n}","import React from \"react\";\nimport Spinner from 'react-bootstrap/Spinner';\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport moment from \"moment\";\nimport ActivitiesServices from \"../../services/activities\";\nimport ActivityOverview from '../activityOverview/ActivityOverview';\nimport './ActivitiesByCategory.scss';\n\n\nexport default class Activities extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            activities: [],\n            selectedDate: \"\"\n        }\n\n        this.activitiesServices = new ActivitiesServices();\n    }\n\n    getActivitiesByCategory = () => {\n        if (this.state.activities.length === 0) {\n            this.activitiesServices.getActivitiesByCategory(this.props.match.params.name)\n                .then(activities => this.setState({ activities: activities }))\n                .catch(err => console.log(err))\n        }\n    }\n\n    handleDateFilter = (e) => {\n        let selectedDate = e.target.value;\n        this.setState({ selectedDate: selectedDate });\n    } \n\n    componentDidMount = () => this.getActivitiesByCategory();\n\n    render() {\n        let categoryName = this.props.match.params.name;\n        return (    \n            <div className=\"activitiesByCategory\">\n                <h1 className=\"activitiesByCategory-title\">Actividades por categoría: {categoryName.charAt(0).toUpperCase() + categoryName.slice(1)}</h1>\n                {this.state.activities.length ? (\n                    <div className=\"activitiesList\">\n                        <Row>\n                            <Col lg={2}>\n                                <div className=\"filterCol\">\n                                    <h5>Filtro de actividades:</h5>\n                                    <Form.Group>\n                                        <Form.Label>Fecha:</Form.Label>\n                                        <Form.Control type=\"date\" onChange={this.handleDateFilter}/>\n                                    </Form.Group>\n                                </div>\n                            </Col>\n                            <Col>\n                                {this.state.selectedDate ? (\n                                    this.state.activities.filter(activity => activity.dates.map(date => moment(date).format('YYYY-MM-DD')).includes(this.state.selectedDate)).map((activity, idx) => <ActivityOverview key={idx} activity={activity} />)\n                                ) : (\n                                    this.state.activities.map((activity, idx) => <ActivityOverview key={idx} activity={activity} />)\n                                )}\n                            </Col>\n                        </Row>\n                    </div>\n                ) : (\n                    <Spinner animation=\"border\" role=\"status\">\n                        <span className=\"sr-only\">Cargando...</span>\n                    </Spinner>\n                )}\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport moment from \"moment\";\nimport ActivitiesServices from \"../../services/activities\";\nimport ActivityOverview from '../activityOverview/ActivityOverview';\nimport './AllActivities.scss';\n\n\nexport default class AllActivities extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            allActivities: [],\n            allCategories: [],\n            filteredActivities: [],\n            filteredCategories: [],\n            selectedDate: \"\"\n        }\n\n        this.activitiesServices = new ActivitiesServices();\n    }\n\n    componentDidMount = () => this.getAllActivities();\n\n    getAllActivities = () => {\n        if (this.state.allActivities.length === 0) {\n            this.activitiesServices.getAllActivities()\n                .then(allActivities => {\n                let allCategories = [...new Set(allActivities.map(activity => JSON.stringify(activity.category)))].map(x => JSON.parse(x));\n                this.setState({ allActivities: allActivities, allCategories: allCategories })\n                })\n                .catch(err => console.log(err));\n        }\n    }\n\n    handleCategoryFilter = (e) => {\n        let category = e.target.id;\n        let newFilter = [...this.state.filteredCategories];\n        let categoryIndex = this.state.filteredCategories.indexOf(category);\n        if(categoryIndex > -1) {\n            newFilter.splice(categoryIndex, 1);\n        } else {\n            newFilter.push(category);\n        }\n        this.setState({ filteredCategories: newFilter })\n    }\n\n    handleDateFilter = (e) => {\n        let selectedDate = e.target.value;\n        this.setState({ selectedDate: selectedDate });\n    } \n\n    render() {\n        return (    \n            <div className=\"allActivities\">\n                <h1 className=\"allActivities-title\">Todas nuestras actividades</h1>\n                {this.state.allActivities.length ? (\n                    <div className=\"activitiesList\">\n                        <Row>\n                            <Col lg={2}>\n                                <div className=\"filterCol\">\n                                    <h5>Filtro de actividades:</h5>\n                                    <Form.Group>\n                                        <Form.Label>Fecha:</Form.Label>\n                                        <Form.Control type=\"date\" onChange={this.handleDateFilter}/>\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Label>Categoría:</Form.Label>\n                                        {this.state.allCategories.map((category, idx) => (\n                                            <Form.Check key={idx} type=\"checkbox\" name=\"category\" id={category.name} label={category.name} onChange={this.handleCategoryFilter}/>\n                                        ))}\n                                    </Form.Group>\n                                </div>\n                            </Col>\n                            <Col>\n                                {this.state.selectedDate ? (\n                                    this.state.filteredCategories.length ? (\n                                        this.state.allActivities.filter(activity => activity.dates.map(date => moment(date).format('YYYY-MM-DD')).includes(this.state.selectedDate)).filter(activityFilteredByDate => this.state.filteredCategories.includes(activityFilteredByDate.category.name)).map((activity, idx) => <ActivityOverview key={idx} activity={activity} />)\n                                    ) : (\n                                        this.state.allActivities.filter(activity => activity.dates.map(date => moment(date).format('YYYY-MM-DD')).includes(this.state.selectedDate)).map((activity, idx) => <ActivityOverview key={idx} activity={activity} />)\n                                    )\n                                ) : (\n                                    this.state.filteredCategories.length ? (\n                                        this.state.allActivities.filter(activity => this.state.filteredCategories.includes(activity.category.name)).map((activity, idx) => <ActivityOverview key={idx} activity={activity} />) \n                                    ) : (\n                                        this.state.allActivities.map((activity, idx) => <ActivityOverview key={idx} activity={activity} />)\n                                    )   \n                                )}\n                            </Col>\n                        </Row>\n                    </div>\n                ) : (\n                    <Spinner animation=\"border\" role=\"status\">\n                        <span className=\"sr-only\">Cargando...</span>\n                    </Spinner>\n                )}\n            </div>\n        );\n    }\n}\n","import axios from 'axios';\n\nexport default class Services {\n\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/users`,\n            withCredentials: true\n        })\n    }\n\n    getAllUsers = () => this.service.get('/all').then(response => response.data);\n\n    getUserDetails = id => this.service.get(`/${id}`).then(response => response.data);\n\n    updateUser = (id, fieldToUpdate) => this.service.put(`/${id}`, fieldToUpdate).then(response => response.data);\n\n    updateUserFav = (userId, activityId) => this.service.put(`/${userId}/favActivities/add`, activityId).then(response => response.data);\n}","import React from \"react\";\nimport {\n  withGoogleMap,\n  GoogleMap,\n  withScriptjs,\n  Marker\n} from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nGeocode.setApiKey(\"AIzaSyAlNRGTWqFk5o74Z4HdZxIUsXF2DNL_-h8\");\nGeocode.enableDebug();\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mapPosition: {\n        lat: this.props.center.lat,\n        lng: this.props.center.lng\n      },\n      markerPosition: {\n        lat: this.props.center.lat,\n        lng: this.props.center.lng\n      }\n    };\n  }\n\n\n  /**\n   * This Event triggers when the marker window is closed\n   *\n   * @param event\n   */\n  onInfoWindowClose = event => {};\n\n  render() {\n    const AsyncMap = withScriptjs(\n      withGoogleMap(props => (\n        <GoogleMap\n          google={this.props.google}\n          defaultZoom={this.props.zoom}\n          defaultCenter={{\n            lat: this.state.mapPosition.lat,\n            lng: this.state.mapPosition.lng\n          }}\n        >\n          {/*Marker*/}\n          <Marker\n            google={this.props.google}\n            name={\"\"}\n            draggable={false}\n            position={{\n              lat: this.state.markerPosition.lat,\n              lng: this.state.markerPosition.lng\n            }}\n          />\n          <Marker />\n        </GoogleMap>\n      ))\n    );\n    let map;\n    if (this.props.center.lat !== undefined) {\n      map = (\n        <div>\n          <AsyncMap\n            googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAlNRGTWqFk5o74Z4HdZxIUsXF2DNL_-h8&libraries=places\"\n            loadingElement={<div style={{ height: `100%` }} />}\n            containerElement={<div style={{ height: this.props.height }} />}\n            mapElement={<div style={{ height: `100%` }} />}\n          />\n        </div>\n      );\n    } else {\n      map = <div style={{ height: this.props.height }} />;\n    }\n    return map;\n  }\n}\nexport default Map;\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport Spinner from 'react-bootstrap/Spinner';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Badge from 'react-bootstrap/Badge';\nimport ActivitiesServices from \"../../services/activities\";\nimport UsersServices from \"../../services/users\";\nimport Map from \"../map/Map\";\nimport './ActivityDetails.scss';\n\nexport default class ActivityDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            specificActivity: null\n        }\n        \n        this.activitiesServices = new ActivitiesServices();\n        this.usersServices = new UsersServices();\n    }\n\n    componentDidMount = () => this.getSpecificActivity();\n\n    getSpecificActivity = () => {\n        if (!this.state.specificActivity) {\n            this.activitiesServices.getActivityDetails(this.props.match.params.id)\n                .then(specificActivity => this.setState({ specificActivity: specificActivity }, () => {\n                    this.userIsParticipant();\n                    this.activityIsFav();\n                }))\n                .catch(err => console.log(err))\n        }\n    }\n\n    userIsParticipant = () => {\n        let alreadyParticipant = this.state.specificActivity.participants.find(participant => participant._id === this.props.loggedInUser._id);\n        let userIsParticipant = false;\n        alreadyParticipant !== undefined ? userIsParticipant = true : userIsParticipant = false;\n        this.setState({ userIsParticipant: userIsParticipant })\n    }\n\n    activityIsFav = () => {\n        let alreadyFav = this.props.loggedInUser.favActivities.find(activity => activity === this.state.specificActivity._id);\n        let activityIsFav = false;\n        alreadyFav !== undefined ? activityIsFav = true : activityIsFav = false;\n        this.setState({ activityIsFav: activityIsFav })\n    }\n\n    addActivityToFav = () => {\n        this.usersServices.updateUserFav(this.props.loggedInUser._id, { favActivities: this.state.specificActivity._id })\n        .then(() => this.setState({ activityIsFav: true }))\n        .catch(err => console.log(err))\n    }\n\n    addParticipant = () => {\n        this.activitiesServices.addParticipant(this.state.specificActivity._id, { newParticipant: this.props.loggedInUser._id })\n        .then(updatedActivity => this.setState({ specificActivity: updatedActivity, userIsParticipant: true }))\n        .catch(err => console.log(err))\n    }\n\n    render() {\n        let activity = this.state.specificActivity;\n        return (    \n            <div>\n                {this.props.loggedInUser ? (\n                    this.state.specificActivity ? (\n                        <Container className=\"activityDetails\">\n                            <Row className=\"activityDetails-mainInfo\">\n                                <Col xs={8} className=\"leftSide\">\n                                    <h1>{this.state.specificActivity.title}</h1>\n                                    <h5 className=\"activityDetails-category\">Categoría: <Badge pill variant=\"info\">{activity.category.name}</Badge></h5>\n                                    <div className=\"activityDetails-activityImg\">\n                                        <img src={activity.imgPath} alt={`${activity.title}`} className=\"activityDetails-img\"/>\n                                    </div>\n                                    <h5>Descripción de la actividad:</h5>\n                                    <p>{activity.description}</p>\n                                    <h5>Requerimientos:</h5>\n                                    <p>{activity.requirements}</p>\n                                </Col>\n                                <Col className=\"rightSide\">\n                                    <img src={activity.organization.imgPath} alt={`logo de ${activity.organization.name}`} className=\"activityDetails-logo\"/>\n                                    <div>\n                                        <Link to={`/organizations/details/${activity.organization._id}`}><h5 className=\"activityDetails-organization\"><strong>{activity.organization.name}</strong></h5></Link>\n                                        <h5>Fechas y horas de la actividad:</h5>\n                                        <ul>\n                                            {activity.dates.map((date, idx)=> <li key={idx}>{moment(date).format('DD/MM/YYYY')} - {activity.time}</li>)}\n                                        </ul>\n                                    </div>\n                                    <div>\n                                        <h5>Mín. participantes: {activity.minParticipants}</h5>\n                                        <h5>Máx. participantes: {activity.maxParticipants}</h5>\n                                        <h5>Plazas vacantes: {activity.maxParticipants - activity.participants.length}</h5>\n                                    </div>\n                                </Col>\n                            </Row>\n                            \n                            <Row className=\"activityDetails-buttons\">\n                                <Col xs={1}>\n                                {this.state.activityIsFav ? (\n                                    <button variant=\"light\" className={`activityDetails-addFavButton ${this.state.activityIsFav ? 'disabled' : ''}`} onClick={this.addActivityToFav} disabled>♥</button>\n                                ) : (\n                                    <button className=\"activityDetails-addFavButton\" onClick={this.addActivityToFav}>♡</button>\n                                )}\n                                </Col>\n                                <Col>\n                                {this.state.userIsParticipant ? (\n                                    <span className=\"activityDetails-alreadyParticipant\">Estás apuntado a esta actividad</span>\n                                ) : (\n                                    <Button onClick={this.addParticipant}>¡Me apunto!</Button>\n                                )}\n                                </Col>\n                                <Col xs={4} className=\"activityDetails-share\">\n                                    <h6>Compártelo:</h6>\n                                    <span><iframe title=\"facebook button\" src=\"https://www.facebook.com/plugins/share_button.php?href=http%3A%2F%2Flocalhost%3A3000%2Factivities%2F5e6401261068a419c58a5fc7&layout=button&size=large&width=103&height=28&appId\" width=\"103\" height=\"28\" style={{border:'none',overflow:'hidden'}} scrolling=\"no\" allow=\"encrypted-media\"></iframe></span>\n                                    \n                                    <span><a href=\"https://twitter.com/share?ref_src=twsrc%5Etfw\" className=\"twitter-share-button\" data-size=\"large\" data-lang=\"es\" data-show-count=\"false\"><img src=\"https://res.cloudinary.com/yelpcampagb/image/upload/v1583674364/ironhack-project3/ery9xhqd2w0efipacfkw.png\" alt=\"twiteer button\"/></a><script async src=\"https://platform.twitter.com/widgets.js\" charSet=\"utf-8\"></script></span>\n                                </Col>\n                            </Row>\n                            \n                            <Row className=\"activityDetails-participants\">\n                                <Col>\n                                    <h6>Participantes:</h6>\n                                    {activity.participants.map((participant, idx) => (\n                                        <Link to={`/users/${participant._id}`} className=\"activityDetails-participant\" key={idx}><img src={participant.imgPath} alt={`${participant.name}`}/>{participant.username}</Link>\n                                    ))}\n                                </Col>\n                            </Row>\n                            <Row className=\"activityDetails-map\">\n                                <Col>\n                                    <h5><strong>Lugar:</strong> {activity.location}</h5>\n                                    <Map\n                                        google={this.props.google}\n                                        center={{lat: activity.coord.lat, lng: activity.coord.lng}}\n                                        height='300px'\n                                        zoom={15}\n                                    />\n                                </Col>\n                            </Row>\n                        </Container>  \n                    ) : (\n                        <Spinner animation=\"border\" role=\"status\">\n                            <span className=\"sr-only\">Cargando...</span>\n                        </Spinner>\n                    )\n                ) : (\n                    <Redirect to=\"/login\"></Redirect>\n                )}\n            </div>\n        );\n    }\n}","import axios from 'axios';\n\nexport default class Services {\n\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/organizations`,\n            withCredentials: true\n        })\n    }\n\n    getAllOrganizations = () => this.service.get('/all').then(response => response.data);\n\n    getOrganizationDetails = id => this.service.get(`/${id}`).then(response => response.data);\n\n    getOrganizationByUser = idUser => this.service.get(`/createdByUser/${idUser}`).then(response => response.data);\n\n    updateOrganization = (id, updatedObject) => this.service.put(`/${id}`, updatedObject).then(response => response.data);\n    \n    createOrganization = newOrganization => this.service.post('/new', newOrganization).then(response => response.data);\n}","import axios from 'axios';\n\nexport default class FilesServices {\n\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/files`,\n            withCredentials: true\n        })\n    }\n\n    handleUpload = theFile => this.service.post('/upload', theFile).then(response => response.data);\n}","import React from 'react';\nimport {Container, Form, Col, Button} from 'react-bootstrap';\nimport Modal from 'react-bootstrap/Modal'\nimport OrganizationsServices from '../../services/organizations';\nimport FilesServices from \"../../services/files\";\nimport './NewOrganization.scss';\n\nexport default class NewOrganization extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newOrganization: {\n                name: \"\",\n                address: \"\",\n                email: \"\",\n                webpage: \"\",\n                phone: \"\",\n                description: \"\",\n                imgPath: \"\",\n                user: this.props.loggedInUser._id\n            },\n            showModal: false\n        }\n\n        this.organizationsServices = new OrganizationsServices();\n        this.filesServices = new FilesServices();\n    }\n\n    handleChange = e => {\n        let { name, value } = e.target;\n        this.setState({\n            newOrganization: { ...this.state.newOrganization, [name]: value }\n        })\n    }\n\n    handleFileUpload = e => {\n        const uploadData = new FormData()\n        uploadData.append(\"imgPath\", e.target.files[0])\n        this.filesServices.handleUpload(uploadData)\n            .then(response => {\n                console.log('Subida de archivo finalizada! La URL de Cloudinary es: ', response.secure_url);\n                this.setState({\n                    newOrganization: { ...this.state.newOrganization, imgPath: response.secure_url }\n               })\n            })\n            .catch(err => console.log(err))\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.createOrganization();\n    }\n\n    createOrganization() {\n        this.organizationsServices.createOrganization(this.state.newOrganization)\n            .then(() => this.setState({ newOrganization: { name: \"\", address: \"\", email: \"\", webpage: \"\", phone: \"\", description: \"\", imgPath: \"\" }, showModal: true }))\n            .catch(err => console.log(err))\n    }\n\n    closeModal = () => this.setState({ showModal: false })\n    openModal = () => this.setState({ showModal: true })\n\n    render() {\n        return(\n            <Container className=\"newOrganization\">\n                <h1>Da de alta tu organización:</h1>\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Row>\n                        <Form.Group as={Col}>\n                            <Form.Label>Nombre:</Form.Label>\n                            <Form.Control type=\"text\" name=\"name\" value={this.state.newOrganization.name} onChange={this.handleChange} placeholder=\"\" required />\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Group>\n                        <Form.Label>Dirección:</Form.Label>\n                        <Form.Control type=\"text\" name=\"address\" value={this.state.newOrganization.address} onChange={this.handleChange} placeholder=\"\" required />\n                    </Form.Group>\n\n                    <Form.Row>\n                        <Form.Group as={Col}>\n                            <Form.Label>Email:</Form.Label>\n                            <Form.Control type=\"email\" name=\"email\" value={this.state.newOrganization.email} onChange={this.handleChange} placeholder=\"\" required />\n                        </Form.Group>\n\n                        <Form.Group as={Col}>\n                            <Form.Label>Página web:</Form.Label>\n                            <Form.Control type=\"text\" name=\"webpage\" value={this.state.newOrganization.webpage} onChange={this.handleChange} placeholder=\"\" />\n                        </Form.Group>\n\n                        <Form.Group as={Col}>\n                            <Form.Label>Teléfono:</Form.Label>\n                            <Form.Control name=\"phone\" value={this.state.newOrganization.phone} onChange={this.handleChange} required />\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Form.Group as={Col}>\n                            <Form.Label>Descripción:</Form.Label>\n                            <Form.Control as=\"textarea\" rows=\"6\" name=\"description\" value={this.state.newOrganization.description} onChange={this.handleChange} required />\n                        </Form.Group>\n                    </Form.Row>\n                \n                    <Form.Row>\n                        <Form.Group as={Col}>\n                            <Form.Label>Imagen o logo de la organización:</Form.Label>\n                            <Form.Control type=\"file\" name=\"imgPath\" onChange={this.handleFileUpload} />\n                        </Form.Group>\n                        <div as={Col} className=\"formButton\">\n                            <Button variant=\"primary\" type=\"submit\">Crear organización</Button>\n                        </div>\n                    </Form.Row>\n                </Form>\n                <div className=\"imgPreview\">\n                    <img src={this.state.newOrganization.imgPath} alt=\"\"/>\n                </div>\n\n                <Modal show={this.state.showModal} onHide={this.closeModal}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Organización creada</Modal.Title>\n                </Modal.Header>\n                    <Modal.Body>Tu organización ya está dada de alta. Ahora puedes empezar a crear las actividades.</Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.closeModal}>Cerrar</Button>\n                    </Modal.Footer>\n                </Modal>\n\n            </Container>\n        );\n    }\n}","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport OrganizationsServices from \"../../services/organizations\";\nimport './OrganizationDetails.scss';\n\nexport default class OrganizationDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            organization: null\n        }\n\n        this.organizationsServices = new OrganizationsServices();\n    }\n\n    componentDidMount = () => {\n        if(this.props.organization) {\n            this.setState({ organization: this.props.organization});\n        } else {\n            this.getOrganization();\n        }\n    }\n\n    getOrganization = () => {\n        this.organizationsServices.getOrganizationDetails(this.props.match.params.id)\n            .then(organization => {\n                this.setState({ organization: organization })\n            })\n            .catch(err => console.log(err));\n    }\n\n    render() {\n        let organization = this.state.organization;\n        return(\n            <div>\n                {this.props.loggedInUser ? (\n                    this.state.organization ? (\n                        <Container className=\"organizationDetails\">\n                            <Row className=\"mainInfo\">\n                                <Col xs={8}>\n                                    <h1>{organization.name}</h1>\n                                    <p>{organization.description}</p>\n                                </Col>\n                                <Col>\n                                    <div className=\"organizationDetails-logo\">\n                                        <img src={organization.imgPath} alt={organization.name}/>\n                                    </div>\n                                </Col>\n                            </Row>\n                            <Row className=\"contactInfo\">\n                                <Col>\n                                    <h4>Información de contacto:</h4>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col xs={5}>\n                                    <h5>Dirección:</h5>\n                                    <p>{organization.address}</p>\n                                </Col>\n                                <Col xs={2}>\n                                    <h5>Teléfono:</h5>\n                                    <p>{organization.phone}</p>\n                                </Col>\n                                <Col>\n                                    <h5>Email:</h5>\n                                    <a href={`mailto:${organization.email}`}>{organization.email}</a>\n                                </Col>\n                                <Col>\n                                    <h5>Página web:</h5>\n                                    <a href={organization.webpage} target=\"_blank\" rel=\"noopener noreferrer\">{organization.webpage}</a>\n                                </Col>\n                            </Row>\n                        </Container>\n                    ) : (\n                        <Spinner animation=\"border\" role=\"status\">\n                            <span className=\"sr-only\">Cargando...</span>\n                        </Spinner>\n                    )\n                ) : (\n                    <Redirect to=\"/login\"></Redirect>\n                )}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport { Form } from 'react-bootstrap';\n\n\nexport default class SearchBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n        location: \"\",\n        coord: {\n            lat: \"\",\n            lng: \"\"\n        } \n    };\n  }\n \n  handleChange = location => {\n    this.setState({ location });\n  };\n \n  handleSelect = location => {\n    geocodeByAddress(location)\n      .then(results => getLatLng(results[0]))\n      .then(latLng => this.setState({ location: location, coord: { lat: latLng.lat, lng: latLng.lng } }, () => this.props.selectLocation(this.state) ))\n      .catch(err => console.error('Error', err));\n  };\n\n \n  render() {\n    return (\n        <PlacesAutocomplete\n            value={this.state.location}\n            onChange={this.handleChange}\n            onSelect={this.handleSelect}\n        >\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n            <div>\n            <Form.Control type=\"text\" name=\"location\"\n                {...getInputProps({\n                    placeholder: 'Busca la dirección',\n                    className: 'location-search-input',\n                })}\n            />\n            <div className=\"autocomplete-dropdown-container\">\n                {loading && <div>Cargando...</div>}\n                {suggestions.map(suggestion => {\n                const className = suggestion.active\n                    ? 'suggestion-item--active'\n                    : 'suggestion-item';\n                const style = suggestion.active\n                    ? { backgroundColor: 'rgb(234, 242, 255)', cursor: 'pointer' }\n                    : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                return (\n                    <div\n                        {...getSuggestionItemProps(suggestion, {\n                            className,\n                            style,\n                        })}\n                        >\n                        <span>{suggestion.description}</span>\n                    </div>\n                );\n                })}\n            </div>\n            </div>\n        )}\n        </PlacesAutocomplete>\n    );\n  }\n}","import React from 'react';\nimport {Container, Form, Col, Button} from 'react-bootstrap';\nimport Modal from 'react-bootstrap/Modal';\nimport ActivitiesServices from '../../services/activities';\nimport OrganizationsServices from '../../services/organizations';\nimport FilesServices from \"../../services/files\";\nimport GoogleSearchBox from \"../../components/googleSearchBox/googleSearchBox\";\nimport './NewActivity.scss';\n\nexport default class NewActivity extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newActivity: {\n                title: \"\",\n                category: \"\",\n                description: \"\",\n                dates: \"\",\n                time: \"\",\n                location: \"\",\n                coord: {\n                    lat: null,\n                    lng: null\n                },\n                minParticipants: \"\",\n                maxParticipants: \"\",\n                requirements: \"\",\n                imgPath: \"\",\n                organization: \"\"\n            },\n            userOrganization: \"\",\n            showModal: false\n        }\n\n        this.activitiesServices = new ActivitiesServices();\n        this.organizationsServices = new OrganizationsServices();\n        this.filesServices = new FilesServices();\n    }\n\n    componentDidMount = () => this.fetchOrganization();\n\n    fetchOrganization() {\n        this.organizationsServices.getOrganizationByUser(this.props.loggedInUser._id)\n        .then(organization => this.setState({ newActivity: { organization: organization[0]._id }, userOrganization: organization[0] }))\n        .catch(err => console.log(err))\n    }\n\n    handleChange = e => {\n        let { name, value } = e.target;\n        this.setState({\n            newActivity: { ...this.state.newActivity, [name]: value }\n        })\n    }\n\n    handleFileUpload = e => {\n        const uploadData = new FormData()\n        uploadData.append(\"imgPath\", e.target.files[0])\n        this.filesServices.handleUpload(uploadData)\n            .then(response => {\n                console.log('Subida de archivo finalizada! La URL de Cloudinary es: ', response.secure_url);\n                this.setState({\n                    newActivity: { ...this.state.newActivity, imgPath: response.secure_url }\n               })\n            })\n            .catch(err => console.log(err))\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.createActivity();\n    }\n\n    updateStateWithLocation = dataFromChild => {\n        this.setState({\n            newActivity: {...this.state.newActivity, location: dataFromChild.location, coord: { lat: dataFromChild.coord.lat, lng: dataFromChild.coord.lng } } \n        })\n    }\n\n    createActivity() {\n        this.activitiesServices.createActivity(this.state.newActivity)\n            .then(() => this.setState({ newActivity: { title: \"\", category: \"\", description: \"\", date: \"\", time: \"\", location: \"\", minParticipants: \"\", maxParticipants: \"\", requirements: \"\", imgPath: \"\", organization: \"\" }, showModal: true }))\n            .catch(err => console.log(err))\n    }\n\n    closeModal = () => this.setState({ showModal: false })\n    openModal = () => this.setState({ showModal: true })\n\n    render() {\n        return(\n            <Container className=\"newActivity\">\n                <h1>Da de alta una actividad:</h1>\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Row>\n                        <Form.Group as={Col} xs={7}>\n                            <Form.Label>Título:</Form.Label>\n                            <Form.Control type=\"text\" name=\"title\" value={this.state.newActivity.title} onChange={this.handleChange} placeholder=\"\" required />\n                        </Form.Group>\n\n                        <Form.Group as={Col} xs={5}>\n                            <Form.Label>Organización:</Form.Label>\n                            <Form.Control name=\"organization\" value={this.state.userOrganization.name} disabled />\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Form.Group as={Col} xs={4}> \n                            <Form.Label>Categoría:</Form.Label>\n                            <Form.Control as=\"select\" name=\"category\" value={this.state.newActivity.category} onChange={this.handleChange} required>\n                                <option value=\"\" disabled defaultValue>Selecciona una categoría</option>\n                                <option value=\"ambiental\">Ambiental</option>\n                                <option value=\"comunitario\">Comunitario</option>\n                                <option value=\"cultural\">Cultural</option>\n                                <option value=\"deportivo\">Deportivo</option>\n                                <option value=\"educativo\">Educativo</option>\n                                <option value=\"ocio y tiempo libre\">Ocio y tiempo libre</option>\n                                <option value=\"proteccion civil\">Protección civil</option>\n                                <option value=\"social\">Social</option>\n                                <option value=\"socio-sanitario\">Socio-sanitario</option>\n                                <option value=\"otro\">Otro</option>\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group as={Col} xs={4}>\n                            <Form.Label>Fecha:</Form.Label>\n                            <Form.Control type=\"date\" name=\"dates\" value={this.state.newActivity.dates} onChange={this.handleChange} placeholder=\"\" required />\n                        </Form.Group>\n\n                        <Form.Group as={Col} xs={4}>\n                            <Form.Label>Hora:</Form.Label>\n                            <Form.Control type=\"text\" name=\"time\" value={this.state.newActivity.time} onChange={this.handleChange} placeholder=\"10:00 h - 13:00 h\" />\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Form.Group as={Col} xs={6}>\n                            <Form.Label>Descripción:</Form.Label>\n                            <Form.Control as=\"textarea\" rows=\"5\" name=\"description\" value={this.state.newActivity.description} onChange={this.handleChange} placeholder=\"Indica aquí la descripción de la actividad, en qué consiste y todos aquellos datos que sean de interés\" required />\n                        </Form.Group>\n\n                        <Form.Group as={Col} xs={6}>\n                            <Form.Label>Requerimientos:</Form.Label>\n                            <Form.Control as=\"textarea\" rows=\"5\" name=\"requirements\" value={this.state.newActivity.requirements} onChange={this.handleChange} placeholder=\"Indica aquí los requerimientos necesarios para poder ejercer como voluntario en esta actividad\" required />\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Form.Group as={Col} xs={12}>\n                            <Form.Label>Ubicación:</Form.Label>\n                            <GoogleSearchBox selectLocation={(dataFromChild) => this.updateStateWithLocation(dataFromChild)}></GoogleSearchBox>\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Form.Group as={Col} xs={3}>\n                            <Form.Label>Número mínimo de participantes:</Form.Label>\n                            <Form.Control type=\"number\" min=\"1\" max=\"100\" name=\"minParticipants\" value={this.state.newActivity.minParticipants} onChange={this.handleChange} required />\n                        </Form.Group>\n\n                        <Form.Group as={Col} xs={3}>\n                            <Form.Label>Número máximo de participantes:</Form.Label>\n                            <Form.Control type=\"number\" min=\"1\" max=\"100\" name=\"maxParticipants\" value={this.state.newActivity.maxParticipants} onChange={this.handleChange} required />\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Form.Group as={Col}>\n                            <Form.Label>Imagen de la actividad:</Form.Label>\n                            <Form.Control type=\"file\" name=\"imgPath\" onChange={this.handleFileUpload} />\n                        </Form.Group>\n\n                        <div as={Col} className=\"formButton\">\n                            <Button variant=\"primary\" type=\"submit\">Crear actividad</Button>\n                        </div>\n                    </Form.Row>\n                </Form>\n                <div className=\"imgPreview\">\n                    <img src={this.state.newActivity.imgPath} alt=\"\"/>\n                </div>\n\n                <Modal show={this.state.showModal} onHide={this.closeModal}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Actividad creada</Modal.Title>\n                </Modal.Header>\n                    <Modal.Body>Tu actividad ya está creada y lista para recibir voluntarios!</Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={this.closeModal}>Cerrar</Button>\n                    </Modal.Footer>\n                </Modal>\n\n            </Container>\n        );\n    }\n}","import React from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\nimport moment from \"moment\";\nimport ActivitiesServices from '../../services/activities';\nimport ActivityOverview from '../activityOverview/ActivityOverview';\nimport './SearchResult.scss';\n\n\nexport default class SearchResult extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            foundActivities: [],\n            allCategories: [],\n            filteredActivities: [],\n            filteredCategories: [],\n            selectedDate: \"\"\n        }\n\n        this.activitiesServices = new ActivitiesServices();\n    }\n\n    componentDidMount = () => this.getSearchResults();\n\n    getSearchResults = () => {\n        if (this.state.foundActivities.length === 0){\n            this.activitiesServices.getActivitiesByTerm(this.props.match.params.searchTerm)\n                .then(foundActivities => {\n                let allCategories = [...new Set(foundActivities.map(activity => JSON.stringify(activity.category)))].map(x => JSON.parse(x));\n                this.setState({ foundActivities: foundActivities, allCategories: allCategories })\n                })\n                .catch(err => console.log(err));\n        }\n    }\n\n    handleCategoryFilter = (e) => {\n        let category = e.target.id;\n        let newFilter = [...this.state.filteredCategories];\n        let categoryIndex = this.state.filteredCategories.indexOf(category);\n        if(categoryIndex > -1) {\n            newFilter.splice(categoryIndex, 1);\n        } else {\n            newFilter.push(category);\n        }\n        this.setState({ filteredCategories: newFilter })\n    }\n\n    handleDateFilter = (e) => {\n        let selectedDate = e.target.value;\n        this.setState({ selectedDate: selectedDate });\n    }\n\n    render() {\n        return (    \n            <div className=\"searchResult\">\n                <h1 className=\"searchResult-title\">Resultados de la búsqueda</h1>\n                {this.state.foundActivities.length ? (\n                    <div className=\"activitiesList\">\n                        <Row>\n                            <Col lg={2}>\n                                <div className=\"filterCol\">   \n                                    <h5>Filtro de actividades:</h5>\n                                    <Form.Group>\n                                        <Form.Label>Fecha:</Form.Label>\n                                        <Form.Control type=\"date\" onChange={this.handleDateFilter}/>\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Label>Categoría:</Form.Label>\n                                        {this.state.allCategories.map((category, idx) => (\n                                            <Form.Check key={idx} type=\"checkbox\" name=\"category\" id={category.name} label={category.name} onChange={this.handleCategoryFilter}/>\n                                        ))}\n                                    </Form.Group>\n                                </div>\n                            </Col>\n                            <Col>\n                                {this.state.selectedDate ? (\n                                    this.state.filteredCategories.length ? (\n                                        this.state.foundActivities.filter(activity => activity.dates.map(date => moment(date).format('YYYY-MM-DD')).includes(this.state.selectedDate)).filter(activityFilteredByDate => this.state.filteredCategories.includes(activityFilteredByDate.category.name)).map((activity, idx) => <ActivityOverview key={idx} activity={activity} />)\n                                    ) : (\n                                        this.state.foundActivities.filter(activity => activity.dates.map(date => moment(date).format('YYYY-MM-DD')).includes(this.state.selectedDate)).map((activity, idx) => <ActivityOverview key={idx} activity={activity} />)\n                                    )\n                                ) : (\n                                    this.state.filteredCategories.length ? (\n                                        this.state.foundActivities.filter(activity => this.state.filteredCategories.includes(activity.category.name)).map((activity, idx) => <ActivityOverview key={idx} activity={activity} />) \n                                    ) : (\n                                        this.state.foundActivities.map((activity, idx) => <ActivityOverview key={idx} activity={activity} />)\n                                    )   \n                                )}           \n                            </Col>\n                        </Row>\n                    </div>\n                ) : (\n                    <Spinner animation=\"border\" role=\"status\">\n                        <span className=\"sr-only\">Cargando...</span>\n                    </Spinner>\n                )}\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ActivityOverview from '../activityOverview/ActivityOverview';\nimport UsersServices from \"../../services/users\";\nimport ActivitiesServices from \"../../services/activities\";\nimport './UserProfile.scss';\n\n\n\nexport default class UserProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: null,\n            isOwner: false,\n            activities: []\n        }\n\n        this.usersServices = new UsersServices();\n        this.activitiesServices = new ActivitiesServices();\n    }\n\n    componentDidMount = () => this.getUserInfo();\n\n    getUserInfo = () => {\n        this.usersServices.getUserDetails(this.props.match.params.id)\n        .then(user => this.setState({ user: user }, () => {\n            this.checkOwner();\n            this.getActivitiesWhereUserIsParticipant();\n        }))\n        .catch(err => console.log(err))\n    }\n\n    checkOwner = () => {\n        if(this.props.loggedInUser._id === this.state.user._id) {\n            this.setState({ isOwner: true })\n        } else {\n            this.setState({ isOwner: false })\n        }\n    }\n\n    getActivitiesWhereUserIsParticipant = () => {\n        this.activitiesServices.getActivitiesByParticipant(this.state.user._id)\n        .then(activities => {\n            this.setState({ activities: activities })\n        })\n        .catch(err => console.log(err))\n    }\n\n    deleteParticipation = (activityId) => {\n        this.activitiesServices.deleteParticipant(activityId, { participant: this.props.loggedInUser._id })\n        .then(() => this.getActivitiesWhereUserIsParticipant())\n        .catch(err => console.log(err))\n    }\n\n    render() {\n        let {activities, isOwner, user} = this.state;\n        let role = \"\";\n        if(user) {\n            role = user.role === 'volunteer' ? 'voluntario' : 'organización';\n        }\n        return (\n            <div className=\"userProfile\">\n                {this.props.loggedInUser ? (\n                    this.state.user ? (\n                        <div>\n                            <Row>\n                                <Col lg={3} className=\"userInfo\">\n                                    <img src={user.imgPath} alt={user.username} />\n                                    <div>\n                                        <h5>Usuario: {user.username}</h5>\n                                        <h5>Rol: {role}</h5>\n                                        <h5>Email: <a href={`mailto:${user.email}`}>{user.email}</a></h5>\n                                    </div>\n                                    {isOwner ? (\n                                        <Button variant=\"warning\">Editar datos</Button>\n                                    ) : (\n                                        \"\"\n                                    )}\n                                </Col>\n                                {this.props.loggedInUser ? (\n                                    <Col>\n                                        <Row>\n                                            {this.state.activities.length ? (\n                                                <>\n                                                    <h4>{`Actividades a las que está apuntado ${user.username}:`}</h4>\n                                                    {activities.map((activity, idx) => <ActivityOverview key={idx} activity={activity} isOwner={isOwner} clickToDelete={(activityId) => this.deleteParticipation(activityId)} />)}\n                                                </>\n                                            ) : (\n                                                <h4>{`${user.username} no está apuntado a ninguna actividad en este momento.`}</h4>\n                                            )}\n                                        </Row>\n                                        <Row>\n                                            {this.state.user.favActivities.length > 0 ? (\n                                                <>\n                                                    <h4>{`Actividades favoritas de ${user.username}:`}</h4>\n                                                    {user.favActivities.map((activity, idx) => <ActivityOverview key={idx} activity={activity} />)}\n                                                </>\n                                            ) : (\n                                                <h4>{`${user.username} no tiene ninguna actividad favorita`}.</h4>\n                                            )}\n                                        </Row>\n                                    </Col>\n                                ) : (\n                                    \"\"\n                                )}\n                            </Row>\n                        </div>\n                    ) : (\n                        <Spinner animation=\"border\" role=\"status\">\n                            <span className=\"sr-only\">Cargando...</span>\n                        </Spinner>\n                    )\n                ) : (\n                    <Redirect to=\"/login\"></Redirect>\n                )}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport OrganizationsServices from '../../services/organizations';\nimport FilesServices from '../../services/files';\n\nexport default class EditOrganizationForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            organization: {\n                name: this.props.organization.name,\n                description: this.props.organization.description,\n                address: this.props.organization.address,\n                phone: this.props.organization.phone,\n                email: this.props.organization.email,\n                webpage: this.props.organization.webpage,\n                imgPath: this.props.organization.imgPath\n            }\n        }\n\n        this.organizationsServices = new OrganizationsServices();\n        this.filesServices = new FilesServices();\n    }\n\n    \n    handleChange = e => {\n        let { name, value } = e.target;\n        this.setState({\n            organization: { ...this.state.organization, [name]: value }\n        })\n    }\n\n    handleFileUpload = e => {\n        const uploadData = new FormData()\n        uploadData.append(\"imgPath\", e.target.files[0])\n        this.filesServices.handleUpload(uploadData)\n            .then(response => {\n                console.log('Subida de archivo finalizada! La URL de Cloudinary es: ', response.secure_url)\n                this.setState({\n                    organization: { ...this.state.organization, imgPath: response.secure_url }\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.saveChanges();\n    }\n\n    saveChanges = () => {\n        this.organizationsServices.updateOrganization(this.props.organization._id, this.state.organization)\n            .then(() => this.finishAction())\n            .catch(err => console.log(err))\n    }\n\n    finishAction = () => {\n        this.props.closeModal();\n        this.props.refreshData();\n    }\n\n    render() {\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                <Form.Row>\n                    <Form.Group as={Col}>\n                        <Form.Label>Nombre:</Form.Label>\n                        <Form.Control type=\"text\" name=\"name\" value={this.state.organization.name} onChange={this.handleChange} placeholder=\"\" required />\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Group>\n                    <Form.Label>Dirección:</Form.Label>\n                    <Form.Control type=\"text\" name=\"address\" value={this.state.organization.address} onChange={this.handleChange} placeholder=\"\" required />\n                </Form.Group>\n\n                <Form.Row>\n                    <Form.Group as={Col}>\n                        <Form.Label>Email:</Form.Label>\n                        <Form.Control type=\"email\" name=\"email\" value={this.state.organization.email} onChange={this.handleChange} placeholder=\"\" required />\n                    </Form.Group>\n\n                    <Form.Group as={Col}>\n                        <Form.Label>Página web:</Form.Label>\n                        <Form.Control type=\"text\" name=\"webpage\" value={this.state.organization.webpage} onChange={this.handleChange} placeholder=\"\" />\n                    </Form.Group>\n\n                    <Form.Group as={Col}>\n                        <Form.Label>Teléfono:</Form.Label>\n                        <Form.Control name=\"phone\" value={this.state.organization.phone} onChange={this.handleChange} required />\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Row> \n                    <Form.Group as={Col}>\n                        <Form.Label>Descripción:</Form.Label>\n                        <Form.Control as=\"textarea\" rows=\"6\" name=\"description\" value={this.state.organization.description} onChange={this.handleChange} required />\n                    </Form.Group>\n                </Form.Row>\n            \n                <Form.Row>\n                    <Form.Group as={Col}>\n                        <Form.Label>Imagen o logo de la organización:</Form.Label>\n                        <Form.Control type=\"file\" name=\"imgPath\" onChange={this.handleFileUpload} />\n                    </Form.Group>\n                </Form.Row>\n                <Button variant=\"primary\" type=\"submit\">Guardar cambios</Button>\n            </Form>\n        )\n    }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Button from \"react-bootstrap/Button\";\nimport ActivitiesServices from \"../../services/activities\";\nimport './ActivityControlView.scss';\n\n\nexport default class ActivityControlView extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.activitiesServices = new ActivitiesServices();\n    }\n\n    render() {\n        let activity = this.props.activity;\n        return (\n            <Container fluid className=\"activityControlView\">\n                <Row className=\"activityControlView-mainInfo\">\n                    <Col lg={8}>\n                        <h6>Título: {activity.title}</h6>\n                        <h6>Categoría: <Badge pill variant=\"info\">{activity.category.name}</Badge></h6>\n                        <h6>Lugar: {activity.location}</h6>\n                    </Col>\n                    <Col lg={4}>\n                        <h6>Fechas:</h6>\n                        {activity.dates.map((date, idx) => <li key={idx}>{moment(date).format('DD/MM/YYYY')}</li>)}\n                    </Col>\n                </Row>\n\n                <Row className=\"activityControlView-participants\">\n                    <Col lg={8}>\n                        <h5>Voluntarios:</h5>\n                        {activity.participants.map((participant, idx) => <Link to={`/users/${participant._id}`} className=\"participant\" key={idx}><img src={participant.imgPath} alt={`${participant.name}`}/>{participant.username}</Link>)}\n                    </Col>\n                    <Col lg={4}>\n                        <h5>Apuntados: {activity.participants.length} de {activity.maxParticipants}</h5>\n                    </Col>\n                </Row>\n                \n                <Row className=\"activityControlView-buttons\">\n                    <Button variant=\"warning\" onClick={() => this.props.onEditClick(this.props.activityIdx)}>Editar actividad</Button>\n                    <Button variant=\"danger\" onClick={() => this.props.onDeleteClick(activity._id)}>Eliminar actividad</Button>\n                </Row>\n            </Container>\n        )\n    }  \n}","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport GoogleSearchBox from \"../../components/googleSearchBox/googleSearchBox\";\nimport ActivitiesServices from '../../services/activities';\nimport FilesServices from '../../services/files';\n\nexport default class EditActivityForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            activity: {\n                title: this.props.activity.title,\n                description: this.props.activity.description,\n                location: this.props.activity.location,\n                coord: this.props.activity.coord,\n                dates: this.props.activity.dates,\n                time: this.props.activity.time,\n                category: this.props.activity.category,\n                minParticipants: this.props.activity.minParticipants,\n                maxParticipants: this.props.activity.maxParticipants,\n                requirements: this.props.activity.requirements,\n                imgPath: this.props.activity.imgPath\n            }\n        }\n\n        this.activitiesServices = new ActivitiesServices();\n        this.filesServices = new FilesServices();\n    }\n\n    \n    handleChange = e => {\n        let { name, value } = e.target;\n        this.setState({\n            activity: { ...this.state.activity, [name]: value }\n        })\n    }\n\n    handleFileUpload = e => {\n        const uploadData = new FormData()\n        uploadData.append(\"imgPath\", e.target.files[0])\n        this.filesServices.handleUpload(uploadData)\n            .then(response => {\n                console.log('Subida de archivo finalizada! La URL de Cloudinary es: ', response.secure_url)\n                this.setState({\n                    activity: { ...this.state.activity, imgPath: response.secure_url }\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    updateStateWithLocation = dataFromChild => {\n        this.setState({\n            activity: {...this.state.activity, location: dataFromChild.location, coord: { lat: dataFromChild.coord.lat, lng: dataFromChild.coord.lng } } \n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.saveChanges();\n    }\n\n    saveChanges = () => {\n        this.activitiesServices.updateActivity(this.props.activity._id, this.state.activity)\n            .then(() => this.finishAction())\n            .catch(err => console.log(err))\n    }\n\n    finishAction = () => {\n        this.props.closeModal();\n        this.props.refreshData();\n    }\n\n    render() {\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                <Form.Row>\n                    <Form.Group as={Col} xs={7}>\n                        <Form.Label>Título:</Form.Label>\n                        <Form.Control type=\"text\" name=\"title\" value={this.state.activity.title} onChange={this.handleChange} placeholder=\"\" required />\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                    <Form.Group as={Col} xs={4}> \n                        <Form.Label>Categoría:</Form.Label>\n                        <Form.Control as=\"select\" name=\"category\" value={this.state.activity.category.name} onChange={this.handleChange} required>\n                            <option value=\"\" disabled defaultValue>Selecciona una categoría</option>\n                            <option value=\"ambiental\">Ambiental</option>\n                            <option value=\"comunitario\">Comunitario</option>\n                            <option value=\"cultural\">Cultural</option>\n                            <option value=\"deportivo\">Deportivo</option>\n                            <option value=\"educativo\">Educativo</option>\n                            <option value=\"ocio y tiempo libre\">Ocio y tiempo libre</option>\n                            <option value=\"proteccion civil\">Protección civil</option>\n                            <option value=\"social\">Social</option>\n                            <option value=\"socio-sanitario\">Socio-sanitario</option>\n                            <option value=\"otro\">Otro</option>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group as={Col} xs={4}>\n                        <Form.Label>Fecha:</Form.Label>\n                        <Form.Control type=\"date\" name=\"dates\" value={this.state.activity.dates} onChange={this.handleChange} placeholder=\"\" required />\n                    </Form.Group>\n\n                    <Form.Group as={Col} xs={4}>\n                        <Form.Label>Hora:</Form.Label>\n                        <Form.Control type=\"text\" name=\"time\" value={this.state.activity.time} onChange={this.handleChange} placeholder=\"10:00 h - 13:00 h\" />\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                    <Form.Group as={Col} xs={6}>\n                        <Form.Label>Descripción:</Form.Label>\n                        <Form.Control as=\"textarea\" rows=\"5\" name=\"description\" value={this.state.activity.description} onChange={this.handleChange} placeholder=\"Indica aquí la descripción de la actividad, en qué consiste y todos aquellos datos que sean de interés\" required />\n                    </Form.Group>\n\n                    <Form.Group as={Col} xs={6}>\n                        <Form.Label>Requerimientos:</Form.Label>\n                        <Form.Control as=\"textarea\" rows=\"5\" name=\"requirements\" value={this.state.activity.requirements} onChange={this.handleChange} placeholder=\"Indica aquí los requerimientos necesarios para poder ejercer como voluntario en esta actividad\" required />\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                    <Form.Group as={Col} xs={12}>\n                        <Form.Label>Ubicación:</Form.Label>\n                        <GoogleSearchBox selectLocation={(dataFromChild) => this.updateStateWithLocation(dataFromChild)}></GoogleSearchBox>\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                    <Form.Group as={Col} xs={3}>\n                        <Form.Label>Número mínimo de participantes:</Form.Label>\n                        <Form.Control type=\"number\" min=\"1\" max=\"100\" name=\"minParticipants\" value={this.state.activity.minParticipants} onChange={this.handleChange} required />\n                    </Form.Group>\n\n                    <Form.Group as={Col} xs={3}>\n                        <Form.Label>Número máximo de participantes:</Form.Label>\n                        <Form.Control type=\"number\" min=\"1\" max=\"100\" name=\"maxParticipants\" value={this.state.activity.maxParticipants} onChange={this.handleChange} required />\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                    <Form.Group as={Col}>\n                        <Form.Label>Imagen de la actividad:</Form.Label>\n                        <Form.Control type=\"file\" name=\"imgPath\" onChange={this.handleFileUpload} />\n                    </Form.Group>\n                </Form.Row>\n                <Button variant=\"primary\" type=\"submit\">Guardar cambios</Button>\n            </Form>\n        )\n    }\n}\n","import React from \"react\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Button from 'react-bootstrap/Button';\nimport Tab from 'react-bootstrap/Tab';\nimport Nav from 'react-bootstrap/Nav';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Modal from 'react-bootstrap/Modal';\nimport OrganizationDetails from '../organizationDetails/OrganizationDetails';\nimport EditOrganizationForm from '../editOrganizationForm/EditOrganizationForm';\nimport ActivityControlView from '../activityControlView/ActivityControlView';\nimport EditActivityForm from '../editActivityForm/EditActivityForm';\nimport OrganizationsServices from \"../../services/organizations\";\nimport ActivitiesServices from \"../../services/activities\";\nimport './ControlPanel.scss';\n\n\nexport default class ControlPanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            hasOrganization: false,\n            organization: null,\n            activities: [],\n            activityToEdit: null,\n            showOrganizationModal: false,\n            showActivityModal: false\n        }\n\n        this.activitiesServices = new ActivitiesServices();\n        this.organizationsServices = new OrganizationsServices();\n    }\n\n    componentDidMount = () => this.getOrganization();\n\n    getOrganization = () => {\n        this.organizationsServices.getOrganizationByUser(this.props.loggedInUser._id)\n        .then(organization => {\n            if(organization.length) {\n                this.setState({ hasOrganization: true, organization: organization[0] }, () => this.getActivitiesByOrganization())\n            }\n        })\n        .catch(err => console.log(err));\n    }\n\n    getActivitiesByOrganization = () => {\n        this.activitiesServices.getActivitiesByOrganization(this.state.organization._id)\n        .then(foundActivities => this.setState({ activities: foundActivities }))\n        .catch(err => console.log(err))\n    }\n\n    getActivityToEdit = (activityIdx) => {\n        const [activityToEdit] = this.state.activities.slice(activityIdx, activityIdx + 1);\n        this.setState({ activityToEdit: activityToEdit }, () => this.openActivityModal());\n    }\n\n    deleteActivity(activityId) {\n        this.activitiesServices.deleteActivity(activityId)\n        .then(() => this.getActivitiesByOrganization())\n        .catch(err => console.log(err))\n    }\n\n    openOrganizationModal = () => this.setState({ showOrganizationModal: true });\n    closeOrganizationModal = () => this.setState({ showOrganizationModal: false });\n\n    openActivityModal = () => this.setState({ showActivityModal: true });\n    closeActivityModal = () => this.setState({ showActivityModal: false });\n\n    \n\n    render() {\n        return(\n            this.state.hasOrganization ? (\n                <div className=\"controlPanel\">\n                    <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"organizationProfile\">\n                        <Row>\n                            <Col sm={2} className=\"controlPanel-menu\">\n                                <Nav variant=\"pills\" className=\"flex-column\">\n                                    <Nav.Item>\n                                        <h5>Panel de control</h5>\n                                        <Nav.Link eventKey=\"organizationProfile\">Perfil de la organización</Nav.Link>\n                                    </Nav.Item>\n                                    <Nav.Item>\n                                        <Nav.Link eventKey=\"activitiesManagement\">Gestión de actividades</Nav.Link>\n                                    </Nav.Item>\n                                </Nav>\n                            </Col>\n                            <Col>\n                                {this.state.organization ? (\n                                    <Tab.Content className=\"controlPanel-mainContent\">\n                                        <Tab.Pane eventKey=\"organizationProfile\">\n                                            <div className=\"organizationProfile\">\n                                                <h3>Perfil de la organización</h3>\n                                                <OrganizationDetails key={Math.random() * 100000} organization={this.state.organization} loggedInUser={this.props.loggedInUser}></OrganizationDetails>\n                                                <Button variant=\"warning\" onClick={this.openOrganizationModal}>Editar datos</Button>\n                                            </div>\n\n                                            <Modal size=\"lg\" show={this.state.showOrganizationModal} onHide={this.closeOrganizationModal}>\n                                                <Modal.Header closeButton>\n                                                    <Modal.Title>Editar perfil de la organización</Modal.Title>\n                                                </Modal.Header>\n                                                <Modal.Body>\n                                                    <EditOrganizationForm organization={this.state.organization} closeModal={this.closeOrganizationModal} refreshData={this.getOrganization} />\n                                                </Modal.Body>\n                                            </Modal>\n                                        </Tab.Pane>\n                                        <Tab.Pane eventKey=\"activitiesManagement\">\n                                            <div className=\"activitiesManagement\">\n                                                <h3>Gestión de actividades</h3>\n                                                {this.state.activities.length ? (\n                                                    this.state.activities.map((activity, idx) => <ActivityControlView key={idx} activityIdx={idx} activity={activity} onEditClick={(idx) => this.getActivityToEdit(idx)} onDeleteClick={activityId => this.deleteActivity(activityId)}/>)\n                                                ) : (\n                                                    <h5>Esta organización aún no ha dado de alta actividades.</h5>\n                                                )}\n                                            </div>\n\n                                            <Modal size=\"lg\" show={this.state.showActivityModal} onHide={this.closeActivityModal}>\n                                                <Modal.Header closeButton>\n                                                    <Modal.Title>Editar actividad</Modal.Title>\n                                                </Modal.Header>\n                                                <Modal.Body>\n                                                    <EditActivityForm activity={this.state.activityToEdit} closeModal={this.closeActivityModal} refreshData={this.getActivitiesByOrganization} />\n                                                </Modal.Body>\n                                            </Modal>\n                                        </Tab.Pane>\n                                    </Tab.Content>\n                                ) : (\n                                    <Spinner animation=\"border\" role=\"status\">\n                                        <span className=\"sr-only\">Cargando...</span>\n                                    </Spinner>\n                                )}\n                            </Col>\n                        </Row>\n                    </Tab.Container>\n                </div>\n            ) : (\n                <div className=\"controlPanel\">\n                    <h2>Para poder acceder al Panel de Control, por favor crea una organización.</h2>\n                </div>\n            )\n            \n        )\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport AuthServices from './services/auth';\nimport NavBar from './components/navbar/NavBar';\nimport Footer from './components/footer/Footer';\nimport Signup from './components/auth/Signup';\nimport Login from './components/auth/Login';\nimport Home from './components/home/Home';\nimport Categories from './components/categories/Categories';\nimport ActivitiesByCategory from './components/activitiesByCategory/ActivitiesByCategory';\nimport AllActivities from './components/allActivities/AllActivities';\nimport ActivityDetails from './components/activityDetails/ActivityDetails';\nimport NewOrganization from './components/newOrganization/NewOrganization';\nimport OrganizationDetails from './components/organizationDetails/OrganizationDetails';\nimport NewActivity from './components/newActivity/NewActivity';\nimport SearchResult from './components/searchResult/SearchResult';\nimport UserProfile from './components/userProfile/UserProfile';\nimport ControlPanel from './components/controlPanel/ControlPanel';\n\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loggedInUser: null\n    };\n\n    this.authServices = new AuthServices();\n  }\n\n  componentDidMount = () => this.fetchUser();\n\n  setUser = userObj => {\n    this.setState({\n      loggedInUser: userObj\n    });\n  };\n\n  fetchUser() {\n    return this.authServices.loggedin()\n    .then(user => {\n      this.setState({\n        loggedInUser: user,\n      });\n    })\n    .catch(err => {\n      this.setState({\n        loggedInUser: false,\n      });\n    });\n  }\n\n  logout = () => {\n    this.authServices.logout().then(() => {\n      this.setState({ loggedInUser: null });\n    });\n  };\n\n\n  render() {\n    const { loggedInUser } = this.state;\n\n    return (\n      <div className=\"App\">\n        <NavBar userInSession={this.state.loggedInUser} logout={this.logout} />\n\n        {loggedInUser ? (\n          <>\n            <Redirect to=\"/home\" />\n            <Switch>\n              <Route exact path=\"/home\" component={Home} /> \n              <Route exact path=\"/categories\" render={() => <Categories {...this.state} />} /> \n              <Route exact path=\"/categories/:name\" render={props => <ActivitiesByCategory {...props} />} />\n              <Route exact path=\"/activities\" render={() => <AllActivities />} />\n              <Route exact path=\"/activities/details/:id\" render={props => <ActivityDetails {...props} loggedInUser={this.state.loggedInUser}/>} />\n              <Route exact path=\"/activities/search/:searchTerm\" render={props => <SearchResult {...props} loggedInUser={this.state.loggedInUser} />} />\n              <Route exact path=\"/activities/new\" render={props => <NewActivity {...props} loggedInUser={this.state.loggedInUser}/>} /> \n              <Route exact path=\"/organizations/new\" render={props => <NewOrganization {...props} loggedInUser={this.state.loggedInUser}/>} /> \n              <Route exact path=\"/organizations/details/:id\" render={props => <OrganizationDetails {...props} loggedInUser={this.state.loggedInUser}/>} /> \n              <Route exact path=\"/users/:id\" render={props => <UserProfile {...props} loggedInUser={this.state.loggedInUser}/>} /> \n              <Route exact path=\"/controlpanel\" render={props => <ControlPanel {...props} loggedInUser={this.state.loggedInUser}/>} /> \n            </Switch>\n            <Footer />\n          </>\n        ) : (\n          <>\n            <Redirect to=\"/home\" />\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route exact path=\"/login\" render={props => <Login {...props} setUser={user => this.setUser(user)} />} />\n\t\t\t\t\t\t\t<Route exact path=\"/signup\" render={props => <Signup {...props} setUser={user => this.setUser(user)} />} />\n              <Route exact path=\"/home\" component={Home} /> \n              <Route exact path=\"/categories\" render={() => <Categories {...this.state} />} /> \n              <Route exact path=\"/categories/:name\" render={props => <ActivitiesByCategory {...props} />} />\n              <Route exact path=\"/activities\" render={() => <AllActivities />} />\n              <Route exact path=\"/activities/details/:id\" render={props => <ActivityDetails {...props} loggedInUser={this.state.loggedInUser}/>} />\n              <Route exact path=\"/activities/search/:searchTerm\" render={props => <SearchResult {...props} loggedInUser={this.state.loggedInUser} />} />\n              <Route exact path=\"/organizations/details/:id\" render={props => <OrganizationDetails {...props} loggedInUser={this.state.loggedInUser}/>} /> \n\t\t\t\t\t\t</Switch>\n            <Footer />\n          </>\n        )}\n      </div>\n    )\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}