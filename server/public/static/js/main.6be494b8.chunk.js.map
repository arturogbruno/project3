{"version":3,"sources":["services/auth.js","components/navbar/Navbar.js","components/auth/Signup.js","components/auth/Login.js","services/activities.js","components/home/Home.js","App.js","serviceWorker.js","index.js"],"names":["Services","signup","username","password","service","post","then","response","data","login","logout","loggedin","get","this","axios","create","baseURL","process","withCredentials","Navbar","props","handleLogout","e","state","loggedInUser","authServices","AuthServices","nextProps","setState","className","to","onClick","React","Component","Signup","handleChange","target","name","value","handleSubmit","preventDefault","postUser","theLoggedNewUser","setUser","catch","err","error","onSubmit","type","onChange","Login","theLoggedUser","console","log","history","push","FormControl","TextField","label","variant","color","required","Button","size","getAllActivities","getActivityDetails","id","createActivity","activity","Home","allActivities","length","activitiesServices","componentDidMount","ActivitiesServices","map","_id","key","title","App","fetchUser","userObj","user","Fragment","userInSession","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6be494b8.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default class Services {\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/auth`,\n            withCredentials: true\n        })\n    }\n\n    signup = ({ username, password }) => this.service.post('/signup', { username, password }).then(response => response.data)\n\n    login = ({ username, password }) => this.service.post('/login', { username, password }).then(response => response.data)\n\n    logout = () => this.service.post('/logout').then(response => response.data)\n    \n    loggedin = () => this.service.get('/loggedin').then(response => response.data)\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthServices from '../../services/auth';\nimport './Navbar.scss';\n\nexport default class Navbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { loggedInUser: null };\n    this.authServices = new AuthServices();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state, loggedInUser: nextProps[\"userInSession\"] });\n  }\n\n  handleLogout = e => {\n    this.props.logout();\n  };\n\n  render() {\n    if(this.state.loggedInUser) {\n      return (\n        <nav className=\"navbar\">\n          <div className=\"navbar-brand\">\n            <span>+SUMA</span>\n          </div>\n          <ul>\n            <li>\n              <span>Bienvenido, <Link className=\"nav-links\" to=\"/profile\">{this.state.loggedInUser.username}</Link></span>\n            </li>\n            <li>\n              <Link className=\"nav-links\" to=\"/\" onClick={this.handleLogout}>Logout</Link>\n            </li>\n          </ul>\n        </nav>\n      );\n    } else {\n      return (\n        <div>\n          <nav className=\"navbar\">\n            <div className=\"navbar-brand\">\n              <span>+SUMA</span>\n            </div>\n            <ul>\n              <li>\n                <Link className=\"nav-links\" to=\"/signup\">Regístrate</Link>\n              </li>\n              <li>\n                <Link className=\"nav-links\" to=\"/login\">Inicia sesión</Link>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      );\n    }\n  }\n}\n","import React from 'react';\nimport AuthServices from '../../services/auth';\n\nclass Signup extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            username: '',\n            password: ''\n        }\n        this.authServices = new AuthServices()\n    }\n\n    handleChange = e => {\n        let { name, value } = e.target\n        this.setState({ [name]: value })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.postUser()\n    }\n\n    postUser = () => {\n        this.authServices.signup(this.state)\n        .then(theLoggedNewUser => {\n            this.setState({ username: '', password: '' })\n            this.props.setUser(theLoggedNewUser)\n        })\n        .catch(err => {\n            this.setState({\n                username: this.state.username,\n                password: this.state.password,\n                error: true\n            });\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Registro de usuarios</h1>\n\n                <form onSubmit={this.handleSubmit}>\n                    <label>Usuario</label>\n                    <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n                    <label>Contraseña</label>\n                    <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                    <input type=\"submit\" value=\"Registrarse\" />\n                </form>\n\n                <h1>{this.state.error ? 'Error' : ''}</h1>\n            </div>\n        )\n    }\n}\n\nexport default Signup","import React from 'react';\nimport AuthServices from '../../services/auth';\nimport { Link } from 'react-router-dom';\nimport { FormControl, Button, TextField } from '@material-ui/core';\nimport './Login.scss';\n\nexport default class Login extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: '',\n            password: ''\n        }\n        this.authServices = new AuthServices()\n    }\n\n    handleChange = e => {\n        let { name, value } = e.target\n        this.setState({ [name]: value })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.postUser()\n    }\n\n    postUser = () => {\n        this.authServices.login(this.state)\n        .then(theLoggedUser => {\n            console.log(theLoggedUser)\n            this.setState({ username: '', password: '' })\n            this.props.setUser(theLoggedUser)\n            this.props.history.push('/')\n        })\n        .catch(err => {\n            this.setState({\n                username: this.state.username,\n                password: this.state.password,\n                error: true\n            });\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"loginPage\">\n                <div className=\"loginForm\">\n                    <h1>¡Nos encanta que vuelvas!</h1>\n\n                    <form onSubmit={this.handleSubmit}>\n                        <FormControl className=\"formControl\"> \n                            <TextField label=\"Usuario\" variant=\"outlined\" color=\"secondary\" name=\"username\" value={this.state.username} onChange={this.handleChange} required/>\n                        </FormControl>\n                        <FormControl className=\"formControl\">\n                            <TextField label=\"Contraseña\" variant=\"outlined\" color=\"secondary\" type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} required/>\n                        </FormControl>\n                        <Button variant=\"outlined\" color=\"secondary\" size=\"large\" type=\"submit\">Iniciar sesión</Button>\n                    </form>\n                    <span className=\"linkSignUp\">¿Aún no tienes una cuenta? <Link to=\"/signup\">Regístrate</Link></span>\n\n                    <h1>{this.state.error ? 'Error' : ''}</h1>\n                </div>\n            </div>\n        )\n    }\n}","import axios from 'axios';\n\nexport default class Services {\n\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}/activities`,\n            withCredentials: true\n        })\n    }\n\n    getAllActivities = () => this.service.get('/all').then(response => response.data)\n    getActivityDetails = id => this.service.get(`/${id}`).then(response => response.data)\n    createActivity = activity => this.service.post('/new', activity).then(response => response.data)\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ActivitiesServices from '../../services/activities';\n\n\nexport default class Home extends React.Component {\n    constructor(props) {\n      super(props);\n  \n      this.state = {\n        loggedInUser: null,\n        allActivities: []\n      };\n  \n      this.activitiesServices = new ActivitiesServices();\n    }\n\n    getAllActivities = () => {\n        if(this.state.allActivities.length === 0) {\n            this.activitiesServices.getAllActivities()\n                .then(allActivities => this.setState({ allActivities: allActivities.allActivities }))\n                .catch(err => console.log(err))\n        }\n    }\n\n    componentDidMount = () => this.getAllActivities();\n\n    render() {\n        return(\n            <div>\n                <h1>Estás en la Home</h1>\n                {this.state.allActivities.length ? (\n                    <ul>\n                        {this.state.allActivities.map(activity => <li><Link to={`/activities/${activity._id}`} key={activity._id}>{activity.title}</Link></li>)}\n                    </ul>\n                )\n                    :\n                    <p>CARGANDO...</p>\n                }\n            </div>\n        )\n    }\n\n}","import React from 'react';\nimport './App.css';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport AuthServices from './services/auth';\nimport Navbar from './components/navbar/Navbar';\nimport Signup from './components/auth/Signup';\nimport Login from './components/auth/Login';\nimport Home from './components/home/Home';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loggedInUser: null\n    };\n\n    this.authServices = new AuthServices();\n  }\n\n  componentDidMount = () => this.fetchUser();\n\n  setUser = userObj => {\n    this.setState({\n      loggedInUser: userObj,\n    });\n  };\n\n  fetchUser() {\n    return this.authServices.loggedin()\n    .then(user => {\n      this.setState({\n        loggedInUser: user,\n      });\n    })\n    .catch(err => {\n      this.setState({\n        loggedInUser: false,\n      });\n    });\n  }\n\n  logout = () => {\n    this.authServices.logout().then(() => {\n      this.setState({ loggedInUser: null });\n    });\n  };\n\n  render() {\n    if (this.state.loggedInUser) {\n      return (\n        <React.Fragment>\n          <div className=\"App\">\n              <Navbar userInSession={this.state.loggedInUser} logout={this.logout} />\n              <Home></Home>\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          <div className=\"App\">\n              <Navbar userInSession={this.state.loggedInUser} logout={this.logout} />\n              <Switch>\n                <Route exact path=\"/signup\" render={() => <Signup setUser={this.setUser} />} />\n                <Route exact path=\"/login\" render={() => <Login setUser={this.setUser} />} />\n              </Switch>\n          </div>\n        </React.Fragment>\n      );\n    }\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}